{
  "abi": [
    {
      "type": "function",
      "name": "packConversionData",
      "inputs": [
        {
          "name": "conversionData",
          "type": "tuple",
          "internalType": "struct ConversionData",
          "components": [
            {
              "name": "subnetID",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "validatorManagerBlockchainID",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "validatorManagerAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "initialValidators",
              "type": "tuple[]",
              "internalType": "struct InitialValidator[]",
              "components": [
                {
                  "name": "nodeID",
                  "type": "bytes",
                  "internalType": "bytes"
                },
                {
                  "name": "blsPublicKey",
                  "type": "bytes",
                  "internalType": "bytes"
                },
                {
                  "name": "weight",
                  "type": "uint64",
                  "internalType": "uint64"
                }
              ]
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "packL1ValidatorRegistrationMessage",
      "inputs": [
        {
          "name": "validationID",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "valid",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "packL1ValidatorWeightMessage",
      "inputs": [
        {
          "name": "validationID",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "nonce",
          "type": "uint64",
          "internalType": "uint64"
        },
        {
          "name": "weight",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "packRegisterL1ValidatorMessage",
      "inputs": [
        {
          "name": "validationPeriod",
          "type": "tuple",
          "internalType": "struct ValidatorMessages.ValidationPeriod",
          "components": [
            {
              "name": "subnetID",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "nodeID",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "blsPublicKey",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "registrationExpiry",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "remainingBalanceOwner",
              "type": "tuple",
              "internalType": "struct PChainOwner",
              "components": [
                {
                  "name": "threshold",
                  "type": "uint32",
                  "internalType": "uint32"
                },
                {
                  "name": "addresses",
                  "type": "address[]",
                  "internalType": "address[]"
                }
              ]
            },
            {
              "name": "disableOwner",
              "type": "tuple",
              "internalType": "struct PChainOwner",
              "components": [
                {
                  "name": "threshold",
                  "type": "uint32",
                  "internalType": "uint32"
                },
                {
                  "name": "addresses",
                  "type": "address[]",
                  "internalType": "address[]"
                }
              ]
            },
            {
              "name": "weight",
              "type": "uint64",
              "internalType": "uint64"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "packSubnetToL1ConversionMessage",
      "inputs": [
        {
          "name": "conversionID",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "packValidationUptimeMessage",
      "inputs": [
        {
          "name": "validationID",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "uptime",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "unpackL1ValidatorRegistrationMessage",
      "inputs": [
        {
          "name": "input",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "unpackL1ValidatorWeightMessage",
      "inputs": [
        {
          "name": "input",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "",
          "type": "uint64",
          "internalType": "uint64"
        },
        {
          "name": "",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "unpackRegisterL1ValidatorMessage",
      "inputs": [
        {
          "name": "input",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct ValidatorMessages.ValidationPeriod",
          "components": [
            {
              "name": "subnetID",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "nodeID",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "blsPublicKey",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "registrationExpiry",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "remainingBalanceOwner",
              "type": "tuple",
              "internalType": "struct PChainOwner",
              "components": [
                {
                  "name": "threshold",
                  "type": "uint32",
                  "internalType": "uint32"
                },
                {
                  "name": "addresses",
                  "type": "address[]",
                  "internalType": "address[]"
                }
              ]
            },
            {
              "name": "disableOwner",
              "type": "tuple",
              "internalType": "struct PChainOwner",
              "components": [
                {
                  "name": "threshold",
                  "type": "uint32",
                  "internalType": "uint32"
                },
                {
                  "name": "addresses",
                  "type": "address[]",
                  "internalType": "address[]"
                }
              ]
            },
            {
              "name": "weight",
              "type": "uint64",
              "internalType": "uint64"
            }
          ]
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "unpackSubnetToL1ConversionMessage",
      "inputs": [
        {
          "name": "input",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "unpackValidationUptimeMessage",
      "inputs": [
        {
          "name": "input",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "error",
      "name": "InvalidBLSPublicKey",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidCodecID",
      "inputs": [
        {
          "name": "id",
          "type": "uint32",
          "internalType": "uint32"
        }
      ]
    },
    {
      "type": "error",
      "name": "InvalidMessageLength",
      "inputs": [
        {
          "name": "actual",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "expected",
          "type": "uint32",
          "internalType": "uint32"
        }
      ]
    },
    {
      "type": "error",
      "name": "InvalidMessageType",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "0x612152610034600b8282823980515f1a607314602857634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100b1575f3560e01c8063854a893f11610079578063854a893f146101b257806387418b8e1461020f5780639b83546514610222578063a699c13514610242578063e1d68f3014610255578063eb97ce5114610268575f80fd5b8063021de88f146100b5578063088c2463146100e25780634d8478841461011257806350782b0f146101335780637f7c427a1461016b575b5f80fd5b6100c86100c33660046118a9565b610289565b604080519283529015156020830152015b60405180910390f35b6100f56100f03660046118a9565b61044a565b604080519283526001600160401b039091166020830152016100d9565b6101256101203660046118a9565b61063b565b6040519081526020016100d9565b6101466101413660046118a9565b6107c8565b604080519384526001600160401b0392831660208501529116908201526060016100d9565b6101a56101793660046118e2565b604080515f60208201819052602282015260268082019390935281518082039093018352604601905290565b6040516100d99190611946565b6101a56101c036600461197a565b604080515f6020820152600360e01b602282015260268101949094526001600160c01b031960c093841b811660468601529190921b16604e830152805180830360360181526056909201905290565b6101a561021d3660046119eb565b610a1e565b6102356102303660046118a9565b610b60565b6040516100d99190611bb4565b6101a5610250366004611c6b565b6114ab565b6101a5610263366004611c9d565b6114ef565b61027b610276366004611d80565b611525565b6040516100d9929190611e7c565b5f8082516027146102c457825160405163cc92daa160e01b815263ffffffff9091166004820152602760248201526044015b60405180910390fd5b5f805b6002811015610313576102db816001611ea8565b6102e6906008611ebb565b61ffff168582815181106102fc576102fc611ed2565b016020015160f81c901b91909117906001016102c7565b5061ffff81161561033d5760405163407b587360e01b815261ffff821660048201526024016102bb565b5f805b600481101561039857610354816003611ea8565b61035f906008611ebb565b63ffffffff1686610371836002611ee6565b8151811061038157610381611ed2565b016020015160f81c901b9190911790600101610340565b5063ffffffff81166002146103c057604051635b60892f60e01b815260040160405180910390fd5b5f805b6020811015610415576103d781601f611ea8565b6103e2906008611ebb565b876103ee836006611ee6565b815181106103fe576103fe611ed2565b016020015160f81c901b91909117906001016103c3565b505f8660268151811061042a5761042a611ed2565b016020015191976001600160f81b03199092161515965090945050505050565b5f808251602e1461048057825160405163cc92daa160e01b815263ffffffff9091166004820152602e60248201526044016102bb565b5f805b60028110156104cf57610497816001611ea8565b6104a2906008611ebb565b61ffff168582815181106104b8576104b8611ed2565b016020015160f81c901b9190911790600101610483565b5061ffff8116156104f95760405163407b587360e01b815261ffff821660048201526024016102bb565b5f805b600481101561055457610510816003611ea8565b61051b906008611ebb565b63ffffffff168661052d836002611ee6565b8151811061053d5761053d611ed2565b016020015160f81c901b91909117906001016104fc565b5063ffffffff81161561057a57604051635b60892f60e01b815260040160405180910390fd5b5f805b60208110156105cf5761059181601f611ea8565b61059c906008611ebb565b876105a8836006611ee6565b815181106105b8576105b8611ed2565b016020015160f81c901b919091179060010161057d565b505f805b600881101561062e576105e7816007611ea8565b6105f2906008611ebb565b6001600160401b031688610607836026611ee6565b8151811061061757610617611ed2565b016020015160f81c901b91909117906001016105d3565b5090969095509350505050565b5f815160261461067057815160405163cc92daa160e01b815263ffffffff9091166004820152602660248201526044016102bb565b5f805b60028110156106bf57610687816001611ea8565b610692906008611ebb565b61ffff168482815181106106a8576106a8611ed2565b016020015160f81c901b9190911790600101610673565b5061ffff8116156106e95760405163407b587360e01b815261ffff821660048201526024016102bb565b5f805b600481101561074457610700816003611ea8565b61070b906008611ebb565b63ffffffff168561071d836002611ee6565b8151811061072d5761072d611ed2565b016020015160f81c901b91909117906001016106ec565b5063ffffffff81161561076a57604051635b60892f60e01b815260040160405180910390fd5b5f805b60208110156107bf5761078181601f611ea8565b61078c906008611ebb565b86610798836006611ee6565b815181106107a8576107a8611ed2565b016020015160f81c901b919091179060010161076d565b50949350505050565b5f805f83516036146107ff57835160405163cc92daa160e01b815263ffffffff9091166004820152603660248201526044016102bb565b5f805b600281101561084e57610816816001611ea8565b610821906008611ebb565b61ffff1686828151811061083757610837611ed2565b016020015160f81c901b9190911790600101610802565b5061ffff8116156108785760405163407b587360e01b815261ffff821660048201526024016102bb565b5f805b60048110156108d35761088f816003611ea8565b61089a906008611ebb565b63ffffffff16876108ac836002611ee6565b815181106108bc576108bc611ed2565b016020015160f81c901b919091179060010161087b565b5063ffffffff81166003146108fb57604051635b60892f60e01b815260040160405180910390fd5b5f805b60208110156109505761091281601f611ea8565b61091d906008611ebb565b88610929836006611ee6565b8151811061093957610939611ed2565b016020015160f81c901b91909117906001016108fe565b505f805b60088110156109af57610968816007611ea8565b610973906008611ebb565b6001600160401b031689610988836026611ee6565b8151811061099857610998611ed2565b016020015160f81c901b9190911790600101610954565b505f805b6008811015610a0e576109c7816007611ea8565b6109d2906008611ebb565b6001600160401b03168a6109e783602e611ee6565b815181106109f7576109f7611ed2565b016020015160f81c901b91909117906001016109b3565b5091989097509095509350505050565b80516020808301516040808501516060868101515192515f95810186905260228101969096526042860193909352600560e21b60628601526bffffffffffffffffffffffff1990831b16606685015260e01b6001600160e01b031916607a84015291607e0160405160208183030381529060405290505f5b836060015151811015610b59578184606001518281518110610aba57610aba611ed2565b60200260200101515f01515185606001518381518110610adc57610adc611ed2565b60200260200101515f015186606001518481518110610afd57610afd611ed2565b60200260200101516020015187606001518581518110610b1f57610b1f611ed2565b602002602001015160400151604051602001610b3f959493929190611ef9565b60408051601f198184030181529190529150600101610a96565b5092915050565b610b68611712565b5f610b71611712565b5f805b6002811015610bcf57610b88816001611ea8565b610b93906008611ebb565b61ffff1686610ba863ffffffff871684611ee6565b81518110610bb857610bb8611ed2565b016020015160f81c901b9190911790600101610b74565b5061ffff811615610bf95760405163407b587360e01b815261ffff821660048201526024016102bb565b610c04600284611f72565b9250505f805b6004811015610c6957610c1e816003611ea8565b610c29906008611ebb565b63ffffffff16868563ffffffff1683610c429190611ee6565b81518110610c5257610c52611ed2565b016020015160f81c901b9190911790600101610c0a565b5063ffffffff8116600114610c9157604051635b60892f60e01b815260040160405180910390fd5b610c9c600484611f72565b9250505f805b6020811015610cf957610cb681601f611ea8565b610cc1906008611ebb565b86610cd263ffffffff871684611ee6565b81518110610ce257610ce2611ed2565b016020015160f81c901b9190911790600101610ca2565b50808252610d08602084611f72565b9250505f805b6004811015610d6d57610d22816003611ea8565b610d2d906008611ebb565b63ffffffff16868563ffffffff1683610d469190611ee6565b81518110610d5657610d56611ed2565b016020015160f81c901b9190911790600101610d0e565b50610d79600484611f72565b92505f8163ffffffff166001600160401b03811115610d9a57610d9a61176c565b6040519080825280601f01601f191660200182016040528015610dc4576020820181803683370190505b5090505f5b8263ffffffff16811015610e335786610de863ffffffff871683611ee6565b81518110610df857610df8611ed2565b602001015160f81c60f81b828281518110610e1557610e15611ed2565b60200101906001600160f81b03191690815f1a905350600101610dc9565b5060208301819052610e458285611f72565b604080516030808252606082019092529195505f92506020820181803683370190505090505f5b6030811015610ed15786610e8663ffffffff871683611ee6565b81518110610e9657610e96611ed2565b602001015160f81c60f81b828281518110610eb357610eb3611ed2565b60200101906001600160f81b03191690815f1a905350600101610e6c565b5060408301819052610ee4603085611f72565b9350505f805b6008811015610f4a57610efe816007611ea8565b610f09906008611ebb565b6001600160401b031687610f2363ffffffff881684611ee6565b81518110610f3357610f33611ed2565b016020015160f81c901b9190911790600101610eea565b506001600160401b0381166060840152610f65600885611f72565b9350505f805f5b6004811015610fcb57610f80816003611ea8565b610f8b906008611ebb565b63ffffffff16888763ffffffff1683610fa49190611ee6565b81518110610fb457610fb4611ed2565b016020015160f81c901b9190911790600101610f6c565b50610fd7600486611f72565b94505f5b600481101561103a57610fef816003611ea8565b610ffa906008611ebb565b63ffffffff16888763ffffffff16836110139190611ee6565b8151811061102357611023611ed2565b016020015160f81c901b9290921791600101610fdb565b50611046600486611f72565b94505f8263ffffffff166001600160401b038111156110675761106761176c565b604051908082528060200260200182016040528015611090578160200160208202803683370190505b5090505f5b8363ffffffff16811015611178576040805160148082528183019092525f916020820181803683370190505090505f5b601481101561112a578a6110df63ffffffff8b1683611ee6565b815181106110ef576110ef611ed2565b602001015160f81c60f81b82828151811061110c5761110c611ed2565b60200101906001600160f81b03191690815f1a9053506001016110c5565b505f601482015190508084848151811061114657611146611ed2565b6001600160a01b039092166020928302919091019091015261116960148a611f72565b98505050806001019050611095565b506040805180820190915263ffffffff9092168252602082015260808401525f80805b60048110156111fa576111af816003611ea8565b6111ba906008611ebb565b63ffffffff16898863ffffffff16836111d39190611ee6565b815181106111e3576111e3611ed2565b016020015160f81c901b919091179060010161119b565b50611206600487611f72565b95505f5b60048110156112695761121e816003611ea8565b611229906008611ebb565b63ffffffff16898863ffffffff16836112429190611ee6565b8151811061125257611252611ed2565b016020015160f81c901b929092179160010161120a565b50611275600487611f72565b95505f8263ffffffff166001600160401b038111156112965761129661176c565b6040519080825280602002602001820160405280156112bf578160200160208202803683370190505b5090505f5b8363ffffffff168110156113a7576040805160148082528183019092525f916020820181803683370190505090505f5b6014811015611359578b61130e63ffffffff8c1683611ee6565b8151811061131e5761131e611ed2565b602001015160f81c60f81b82828151811061133b5761133b611ed2565b60200101906001600160f81b03191690815f1a9053506001016112f4565b505f601482015190508084848151811061137557611375611ed2565b6001600160a01b039092166020928302919091019091015261139860148b611f72565b995050508060010190506112c4565b506040805180820190915263ffffffff9092168252602082015260a08501525f6113d18284611f72565b6113dc906014611f8f565b6113e785607a611f72565b6113f19190611f72565b90508063ffffffff1688511461142d57875160405163cc92daa160e01b815263ffffffff918216600482015290821660248201526044016102bb565b5f805b600881101561149057611444816007611ea8565b61144f906008611ebb565b6001600160401b03168a61146963ffffffff8b1684611ee6565b8151811061147957611479611ed2565b016020015160f81c901b9190911790600101611430565b506001600160401b031660c086015250929695505050505050565b6040515f6020820152600160e11b60228201526026810183905281151560f81b60468201526060906047015b60405160208183030381529060405290505b92915050565b6040515f602082018190526022820152602681018390526001600160c01b031960c083901b166046820152606090604e016114d7565b5f606082604001515160301461154e5760405163180ffa0d60e01b815260040160405180910390fd5b82516020808501518051604080880151606089015160808a01518051908701515193515f9861158f988a986001989297929690959094909390929101611fb7565b60405160208183030381529060405290505f5b84608001516020015151811015611601578185608001516020015182815181106115ce576115ce611ed2565b60200260200101516040516020016115e7929190612071565b60408051601f1981840301815291905291506001016115a2565b5060a08401518051602091820151516040516116219385939291016120a7565b60405160208183030381529060405290505f5b8460a00151602001515181101561169357818560a0015160200151828151811061166057611660611ed2565b6020026020010151604051602001611679929190612071565b60408051601f198184030181529190529150600101611634565b5060c08401516040516116aa9183916020016120e2565b60405160208183030381529060405290506002816040516116cb9190612113565b602060405180830381855afa1580156116e6573d5f803e3d5ffd5b5050506040513d601f19601f82011682018060405250810190611709919061212e565b94909350915050565b6040805160e0810182525f808252606060208084018290528385018290528184018390528451808601865283815280820183905260808501528451808601909552918452908301529060a082019081525f60209091015290565b634e487b7160e01b5f52604160045260245ffd5b604051608081016001600160401b03811182821017156117a2576117a261176c565b60405290565b604051606081016001600160401b03811182821017156117a2576117a261176c565b604080519081016001600160401b03811182821017156117a2576117a261176c565b60405160e081016001600160401b03811182821017156117a2576117a261176c565b604051601f8201601f191681016001600160401b03811182821017156118365761183661176c565b604052919050565b5f82601f83011261184d575f80fd5b81356001600160401b038111156118665761186661176c565b611879601f8201601f191660200161180e565b81815284602083860101111561188d575f80fd5b816020850160208301375f918101602001919091529392505050565b5f602082840312156118b9575f80fd5b81356001600160401b038111156118ce575f80fd5b6118da8482850161183e565b949350505050565b5f602082840312156118f2575f80fd5b5035919050565b5f5b838110156119135781810151838201526020016118fb565b50505f910152565b5f81518084526119328160208601602086016118f9565b601f01601f19169290920160200192915050565b602081525f611958602083018461191b565b9392505050565b80356001600160401b0381168114611975575f80fd5b919050565b5f805f6060848603121561198c575f80fd5b8335925061199c6020850161195f565b91506119aa6040850161195f565b90509250925092565b80356001600160a01b0381168114611975575f80fd5b5f6001600160401b038211156119e1576119e161176c565b5060051b60200190565b5f60208083850312156119fc575f80fd5b82356001600160401b0380821115611a12575f80fd5b9084019060808287031215611a25575f80fd5b611a2d611780565b823581528383013584820152611a45604084016119b3565b604082015260608084013583811115611a5c575f80fd5b80850194505087601f850112611a70575f80fd5b8335611a83611a7e826119c9565b61180e565b81815260059190911b8501860190868101908a831115611aa1575f80fd5b8787015b83811015611b3a57803587811115611abb575f80fd5b8801808d03601f1901861315611acf575f80fd5b611ad76117a8565b8a82013589811115611ae7575f80fd5b611af58f8d8386010161183e565b825250604082013589811115611b09575f80fd5b611b178f8d8386010161183e565b8c83015250611b2787830161195f565b6040820152845250918801918801611aa5565b506060850152509198975050505050505050565b5f6040830163ffffffff8351168452602080840151604060208701528281518085526060880191506020830194505f92505b80831015611ba95784516001600160a01b03168252938301936001929092019190830190611b80565b509695505050505050565b60208152815160208201525f602083015160e06040840152611bda61010084018261191b565b90506040840151601f1980858403016060860152611bf8838361191b565b92506001600160401b03606087015116608086015260808601519150808584030160a0860152611c288383611b4e565b925060a08601519150808584030160c086015250611c468282611b4e565b91505060c0840151611c6360e08501826001600160401b03169052565b509392505050565b5f8060408385031215611c7c575f80fd5b8235915060208301358015158114611c92575f80fd5b809150509250929050565b5f8060408385031215611cae575f80fd5b82359150611cbe6020840161195f565b90509250929050565b5f60408284031215611cd7575f80fd5b611cdf6117ca565b9050813563ffffffff81168114611cf4575f80fd5b81526020828101356001600160401b03811115611d0f575f80fd5b8301601f81018513611d1f575f80fd5b8035611d2d611a7e826119c9565b81815260059190911b82018301908381019087831115611d4b575f80fd5b928401925b82841015611d7057611d61846119b3565b82529284019290840190611d50565b8085870152505050505092915050565b5f60208284031215611d90575f80fd5b81356001600160401b0380821115611da6575f80fd5b9083019060e08286031215611db9575f80fd5b611dc16117ec565b82358152602083013582811115611dd6575f80fd5b611de28782860161183e565b602083015250604083013582811115611df9575f80fd5b611e058782860161183e565b604083015250611e176060840161195f565b6060820152608083013582811115611e2d575f80fd5b611e3987828601611cc7565b60808301525060a083013582811115611e50575f80fd5b611e5c87828601611cc7565b60a083015250611e6e60c0840161195f565b60c082015295945050505050565b828152604060208201525f6118da604083018461191b565b634e487b7160e01b5f52601160045260245ffd5b818103818111156114e9576114e9611e94565b80820281158282048414176114e9576114e9611e94565b634e487b7160e01b5f52603260045260245ffd5b808201808211156114e9576114e9611e94565b5f8651611f0a818460208b016118f9565b60e087901b6001600160e01b0319169083019081528551611f32816004840160208a016118f9565b8551910190611f488160048401602089016118f9565b60c09490941b6001600160c01b031916600491909401908101939093525050600c01949350505050565b63ffffffff818116838216019080821115610b5957610b59611e94565b63ffffffff818116838216028082169190828114611faf57611faf611e94565b505092915050565b61ffff60f01b8a60f01b1681525f63ffffffff60e01b808b60e01b166002840152896006840152808960e01b166026840152508651611ffd81602a850160208b016118f9565b86519083019061201481602a840160208b016118f9565b60c087901b6001600160c01b031916602a9290910191820152612046603282018660e01b6001600160e01b0319169052565b61205f603682018560e01b6001600160e01b0319169052565b603a019b9a5050505050505050505050565b5f83516120828184602088016118f9565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b5f84516120b88184602089016118f9565b6001600160e01b031960e095861b8116919093019081529290931b16600482015260080192915050565b5f83516120f38184602088016118f9565b60c09390931b6001600160c01b0319169190920190815260080192915050565b5f82516121248184602087016118f9565b9190910192915050565b5f6020828403121561213e575f80fd5b505191905056fea164736f6c6343000819000a",
    "sourceMap": "450:26996:97:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;450:26996:97;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x73000000000000000000000000000000000000000030146080604052600436106100b1575f3560e01c8063854a893f11610079578063854a893f146101b257806387418b8e1461020f5780639b83546514610222578063a699c13514610242578063e1d68f3014610255578063eb97ce5114610268575f80fd5b8063021de88f146100b5578063088c2463146100e25780634d8478841461011257806350782b0f146101335780637f7c427a1461016b575b5f80fd5b6100c86100c33660046118a9565b610289565b604080519283529015156020830152015b60405180910390f35b6100f56100f03660046118a9565b61044a565b604080519283526001600160401b039091166020830152016100d9565b6101256101203660046118a9565b61063b565b6040519081526020016100d9565b6101466101413660046118a9565b6107c8565b604080519384526001600160401b0392831660208501529116908201526060016100d9565b6101a56101793660046118e2565b604080515f60208201819052602282015260268082019390935281518082039093018352604601905290565b6040516100d99190611946565b6101a56101c036600461197a565b604080515f6020820152600360e01b602282015260268101949094526001600160c01b031960c093841b811660468601529190921b16604e830152805180830360360181526056909201905290565b6101a561021d3660046119eb565b610a1e565b6102356102303660046118a9565b610b60565b6040516100d99190611bb4565b6101a5610250366004611c6b565b6114ab565b6101a5610263366004611c9d565b6114ef565b61027b610276366004611d80565b611525565b6040516100d9929190611e7c565b5f8082516027146102c457825160405163cc92daa160e01b815263ffffffff9091166004820152602760248201526044015b60405180910390fd5b5f805b6002811015610313576102db816001611ea8565b6102e6906008611ebb565b61ffff168582815181106102fc576102fc611ed2565b016020015160f81c901b91909117906001016102c7565b5061ffff81161561033d5760405163407b587360e01b815261ffff821660048201526024016102bb565b5f805b600481101561039857610354816003611ea8565b61035f906008611ebb565b63ffffffff1686610371836002611ee6565b8151811061038157610381611ed2565b016020015160f81c901b9190911790600101610340565b5063ffffffff81166002146103c057604051635b60892f60e01b815260040160405180910390fd5b5f805b6020811015610415576103d781601f611ea8565b6103e2906008611ebb565b876103ee836006611ee6565b815181106103fe576103fe611ed2565b016020015160f81c901b91909117906001016103c3565b505f8660268151811061042a5761042a611ed2565b016020015191976001600160f81b03199092161515965090945050505050565b5f808251602e1461048057825160405163cc92daa160e01b815263ffffffff9091166004820152602e60248201526044016102bb565b5f805b60028110156104cf57610497816001611ea8565b6104a2906008611ebb565b61ffff168582815181106104b8576104b8611ed2565b016020015160f81c901b9190911790600101610483565b5061ffff8116156104f95760405163407b587360e01b815261ffff821660048201526024016102bb565b5f805b600481101561055457610510816003611ea8565b61051b906008611ebb565b63ffffffff168661052d836002611ee6565b8151811061053d5761053d611ed2565b016020015160f81c901b91909117906001016104fc565b5063ffffffff81161561057a57604051635b60892f60e01b815260040160405180910390fd5b5f805b60208110156105cf5761059181601f611ea8565b61059c906008611ebb565b876105a8836006611ee6565b815181106105b8576105b8611ed2565b016020015160f81c901b919091179060010161057d565b505f805b600881101561062e576105e7816007611ea8565b6105f2906008611ebb565b6001600160401b031688610607836026611ee6565b8151811061061757610617611ed2565b016020015160f81c901b91909117906001016105d3565b5090969095509350505050565b5f815160261461067057815160405163cc92daa160e01b815263ffffffff9091166004820152602660248201526044016102bb565b5f805b60028110156106bf57610687816001611ea8565b610692906008611ebb565b61ffff168482815181106106a8576106a8611ed2565b016020015160f81c901b9190911790600101610673565b5061ffff8116156106e95760405163407b587360e01b815261ffff821660048201526024016102bb565b5f805b600481101561074457610700816003611ea8565b61070b906008611ebb565b63ffffffff168561071d836002611ee6565b8151811061072d5761072d611ed2565b016020015160f81c901b91909117906001016106ec565b5063ffffffff81161561076a57604051635b60892f60e01b815260040160405180910390fd5b5f805b60208110156107bf5761078181601f611ea8565b61078c906008611ebb565b86610798836006611ee6565b815181106107a8576107a8611ed2565b016020015160f81c901b919091179060010161076d565b50949350505050565b5f805f83516036146107ff57835160405163cc92daa160e01b815263ffffffff9091166004820152603660248201526044016102bb565b5f805b600281101561084e57610816816001611ea8565b610821906008611ebb565b61ffff1686828151811061083757610837611ed2565b016020015160f81c901b9190911790600101610802565b5061ffff8116156108785760405163407b587360e01b815261ffff821660048201526024016102bb565b5f805b60048110156108d35761088f816003611ea8565b61089a906008611ebb565b63ffffffff16876108ac836002611ee6565b815181106108bc576108bc611ed2565b016020015160f81c901b919091179060010161087b565b5063ffffffff81166003146108fb57604051635b60892f60e01b815260040160405180910390fd5b5f805b60208110156109505761091281601f611ea8565b61091d906008611ebb565b88610929836006611ee6565b8151811061093957610939611ed2565b016020015160f81c901b91909117906001016108fe565b505f805b60088110156109af57610968816007611ea8565b610973906008611ebb565b6001600160401b031689610988836026611ee6565b8151811061099857610998611ed2565b016020015160f81c901b9190911790600101610954565b505f805b6008811015610a0e576109c7816007611ea8565b6109d2906008611ebb565b6001600160401b03168a6109e783602e611ee6565b815181106109f7576109f7611ed2565b016020015160f81c901b91909117906001016109b3565b5091989097509095509350505050565b80516020808301516040808501516060868101515192515f95810186905260228101969096526042860193909352600560e21b60628601526bffffffffffffffffffffffff1990831b16606685015260e01b6001600160e01b031916607a84015291607e0160405160208183030381529060405290505f5b836060015151811015610b59578184606001518281518110610aba57610aba611ed2565b60200260200101515f01515185606001518381518110610adc57610adc611ed2565b60200260200101515f015186606001518481518110610afd57610afd611ed2565b60200260200101516020015187606001518581518110610b1f57610b1f611ed2565b602002602001015160400151604051602001610b3f959493929190611ef9565b60408051601f198184030181529190529150600101610a96565b5092915050565b610b68611712565b5f610b71611712565b5f805b6002811015610bcf57610b88816001611ea8565b610b93906008611ebb565b61ffff1686610ba863ffffffff871684611ee6565b81518110610bb857610bb8611ed2565b016020015160f81c901b9190911790600101610b74565b5061ffff811615610bf95760405163407b587360e01b815261ffff821660048201526024016102bb565b610c04600284611f72565b9250505f805b6004811015610c6957610c1e816003611ea8565b610c29906008611ebb565b63ffffffff16868563ffffffff1683610c429190611ee6565b81518110610c5257610c52611ed2565b016020015160f81c901b9190911790600101610c0a565b5063ffffffff8116600114610c9157604051635b60892f60e01b815260040160405180910390fd5b610c9c600484611f72565b9250505f805b6020811015610cf957610cb681601f611ea8565b610cc1906008611ebb565b86610cd263ffffffff871684611ee6565b81518110610ce257610ce2611ed2565b016020015160f81c901b9190911790600101610ca2565b50808252610d08602084611f72565b9250505f805b6004811015610d6d57610d22816003611ea8565b610d2d906008611ebb565b63ffffffff16868563ffffffff1683610d469190611ee6565b81518110610d5657610d56611ed2565b016020015160f81c901b9190911790600101610d0e565b50610d79600484611f72565b92505f8163ffffffff166001600160401b03811115610d9a57610d9a61176c565b6040519080825280601f01601f191660200182016040528015610dc4576020820181803683370190505b5090505f5b8263ffffffff16811015610e335786610de863ffffffff871683611ee6565b81518110610df857610df8611ed2565b602001015160f81c60f81b828281518110610e1557610e15611ed2565b60200101906001600160f81b03191690815f1a905350600101610dc9565b5060208301819052610e458285611f72565b604080516030808252606082019092529195505f92506020820181803683370190505090505f5b6030811015610ed15786610e8663ffffffff871683611ee6565b81518110610e9657610e96611ed2565b602001015160f81c60f81b828281518110610eb357610eb3611ed2565b60200101906001600160f81b03191690815f1a905350600101610e6c565b5060408301819052610ee4603085611f72565b9350505f805b6008811015610f4a57610efe816007611ea8565b610f09906008611ebb565b6001600160401b031687610f2363ffffffff881684611ee6565b81518110610f3357610f33611ed2565b016020015160f81c901b9190911790600101610eea565b506001600160401b0381166060840152610f65600885611f72565b9350505f805f5b6004811015610fcb57610f80816003611ea8565b610f8b906008611ebb565b63ffffffff16888763ffffffff1683610fa49190611ee6565b81518110610fb457610fb4611ed2565b016020015160f81c901b9190911790600101610f6c565b50610fd7600486611f72565b94505f5b600481101561103a57610fef816003611ea8565b610ffa906008611ebb565b63ffffffff16888763ffffffff16836110139190611ee6565b8151811061102357611023611ed2565b016020015160f81c901b9290921791600101610fdb565b50611046600486611f72565b94505f8263ffffffff166001600160401b038111156110675761106761176c565b604051908082528060200260200182016040528015611090578160200160208202803683370190505b5090505f5b8363ffffffff16811015611178576040805160148082528183019092525f916020820181803683370190505090505f5b601481101561112a578a6110df63ffffffff8b1683611ee6565b815181106110ef576110ef611ed2565b602001015160f81c60f81b82828151811061110c5761110c611ed2565b60200101906001600160f81b03191690815f1a9053506001016110c5565b505f601482015190508084848151811061114657611146611ed2565b6001600160a01b039092166020928302919091019091015261116960148a611f72565b98505050806001019050611095565b506040805180820190915263ffffffff9092168252602082015260808401525f80805b60048110156111fa576111af816003611ea8565b6111ba906008611ebb565b63ffffffff16898863ffffffff16836111d39190611ee6565b815181106111e3576111e3611ed2565b016020015160f81c901b919091179060010161119b565b50611206600487611f72565b95505f5b60048110156112695761121e816003611ea8565b611229906008611ebb565b63ffffffff16898863ffffffff16836112429190611ee6565b8151811061125257611252611ed2565b016020015160f81c901b929092179160010161120a565b50611275600487611f72565b95505f8263ffffffff166001600160401b038111156112965761129661176c565b6040519080825280602002602001820160405280156112bf578160200160208202803683370190505b5090505f5b8363ffffffff168110156113a7576040805160148082528183019092525f916020820181803683370190505090505f5b6014811015611359578b61130e63ffffffff8c1683611ee6565b8151811061131e5761131e611ed2565b602001015160f81c60f81b82828151811061133b5761133b611ed2565b60200101906001600160f81b03191690815f1a9053506001016112f4565b505f601482015190508084848151811061137557611375611ed2565b6001600160a01b039092166020928302919091019091015261139860148b611f72565b995050508060010190506112c4565b506040805180820190915263ffffffff9092168252602082015260a08501525f6113d18284611f72565b6113dc906014611f8f565b6113e785607a611f72565b6113f19190611f72565b90508063ffffffff1688511461142d57875160405163cc92daa160e01b815263ffffffff918216600482015290821660248201526044016102bb565b5f805b600881101561149057611444816007611ea8565b61144f906008611ebb565b6001600160401b03168a61146963ffffffff8b1684611ee6565b8151811061147957611479611ed2565b016020015160f81c901b9190911790600101611430565b506001600160401b031660c086015250929695505050505050565b6040515f6020820152600160e11b60228201526026810183905281151560f81b60468201526060906047015b60405160208183030381529060405290505b92915050565b6040515f602082018190526022820152602681018390526001600160c01b031960c083901b166046820152606090604e016114d7565b5f606082604001515160301461154e5760405163180ffa0d60e01b815260040160405180910390fd5b82516020808501518051604080880151606089015160808a01518051908701515193515f9861158f988a986001989297929690959094909390929101611fb7565b60405160208183030381529060405290505f5b84608001516020015151811015611601578185608001516020015182815181106115ce576115ce611ed2565b60200260200101516040516020016115e7929190612071565b60408051601f1981840301815291905291506001016115a2565b5060a08401518051602091820151516040516116219385939291016120a7565b60405160208183030381529060405290505f5b8460a00151602001515181101561169357818560a0015160200151828151811061166057611660611ed2565b6020026020010151604051602001611679929190612071565b60408051601f198184030181529190529150600101611634565b5060c08401516040516116aa9183916020016120e2565b60405160208183030381529060405290506002816040516116cb9190612113565b602060405180830381855afa1580156116e6573d5f803e3d5ffd5b5050506040513d601f19601f82011682018060405250810190611709919061212e565b94909350915050565b6040805160e0810182525f808252606060208084018290528385018290528184018390528451808601865283815280820183905260808501528451808601909552918452908301529060a082019081525f60209091015290565b634e487b7160e01b5f52604160045260245ffd5b604051608081016001600160401b03811182821017156117a2576117a261176c565b60405290565b604051606081016001600160401b03811182821017156117a2576117a261176c565b604080519081016001600160401b03811182821017156117a2576117a261176c565b60405160e081016001600160401b03811182821017156117a2576117a261176c565b604051601f8201601f191681016001600160401b03811182821017156118365761183661176c565b604052919050565b5f82601f83011261184d575f80fd5b81356001600160401b038111156118665761186661176c565b611879601f8201601f191660200161180e565b81815284602083860101111561188d575f80fd5b816020850160208301375f918101602001919091529392505050565b5f602082840312156118b9575f80fd5b81356001600160401b038111156118ce575f80fd5b6118da8482850161183e565b949350505050565b5f602082840312156118f2575f80fd5b5035919050565b5f5b838110156119135781810151838201526020016118fb565b50505f910152565b5f81518084526119328160208601602086016118f9565b601f01601f19169290920160200192915050565b602081525f611958602083018461191b565b9392505050565b80356001600160401b0381168114611975575f80fd5b919050565b5f805f6060848603121561198c575f80fd5b8335925061199c6020850161195f565b91506119aa6040850161195f565b90509250925092565b80356001600160a01b0381168114611975575f80fd5b5f6001600160401b038211156119e1576119e161176c565b5060051b60200190565b5f60208083850312156119fc575f80fd5b82356001600160401b0380821115611a12575f80fd5b9084019060808287031215611a25575f80fd5b611a2d611780565b823581528383013584820152611a45604084016119b3565b604082015260608084013583811115611a5c575f80fd5b80850194505087601f850112611a70575f80fd5b8335611a83611a7e826119c9565b61180e565b81815260059190911b8501860190868101908a831115611aa1575f80fd5b8787015b83811015611b3a57803587811115611abb575f80fd5b8801808d03601f1901861315611acf575f80fd5b611ad76117a8565b8a82013589811115611ae7575f80fd5b611af58f8d8386010161183e565b825250604082013589811115611b09575f80fd5b611b178f8d8386010161183e565b8c83015250611b2787830161195f565b6040820152845250918801918801611aa5565b506060850152509198975050505050505050565b5f6040830163ffffffff8351168452602080840151604060208701528281518085526060880191506020830194505f92505b80831015611ba95784516001600160a01b03168252938301936001929092019190830190611b80565b509695505050505050565b60208152815160208201525f602083015160e06040840152611bda61010084018261191b565b90506040840151601f1980858403016060860152611bf8838361191b565b92506001600160401b03606087015116608086015260808601519150808584030160a0860152611c288383611b4e565b925060a08601519150808584030160c086015250611c468282611b4e565b91505060c0840151611c6360e08501826001600160401b03169052565b509392505050565b5f8060408385031215611c7c575f80fd5b8235915060208301358015158114611c92575f80fd5b809150509250929050565b5f8060408385031215611cae575f80fd5b82359150611cbe6020840161195f565b90509250929050565b5f60408284031215611cd7575f80fd5b611cdf6117ca565b9050813563ffffffff81168114611cf4575f80fd5b81526020828101356001600160401b03811115611d0f575f80fd5b8301601f81018513611d1f575f80fd5b8035611d2d611a7e826119c9565b81815260059190911b82018301908381019087831115611d4b575f80fd5b928401925b82841015611d7057611d61846119b3565b82529284019290840190611d50565b8085870152505050505092915050565b5f60208284031215611d90575f80fd5b81356001600160401b0380821115611da6575f80fd5b9083019060e08286031215611db9575f80fd5b611dc16117ec565b82358152602083013582811115611dd6575f80fd5b611de28782860161183e565b602083015250604083013582811115611df9575f80fd5b611e058782860161183e565b604083015250611e176060840161195f565b6060820152608083013582811115611e2d575f80fd5b611e3987828601611cc7565b60808301525060a083013582811115611e50575f80fd5b611e5c87828601611cc7565b60a083015250611e6e60c0840161195f565b60c082015295945050505050565b828152604060208201525f6118da604083018461191b565b634e487b7160e01b5f52601160045260245ffd5b818103818111156114e9576114e9611e94565b80820281158282048414176114e9576114e9611e94565b634e487b7160e01b5f52603260045260245ffd5b808201808211156114e9576114e9611e94565b5f8651611f0a818460208b016118f9565b60e087901b6001600160e01b0319169083019081528551611f32816004840160208a016118f9565b8551910190611f488160048401602089016118f9565b60c09490941b6001600160c01b031916600491909401908101939093525050600c01949350505050565b63ffffffff818116838216019080821115610b5957610b59611e94565b63ffffffff818116838216028082169190828114611faf57611faf611e94565b505092915050565b61ffff60f01b8a60f01b1681525f63ffffffff60e01b808b60e01b166002840152896006840152808960e01b166026840152508651611ffd81602a850160208b016118f9565b86519083019061201481602a840160208b016118f9565b60c087901b6001600160c01b031916602a9290910191820152612046603282018660e01b6001600160e01b0319169052565b61205f603682018560e01b6001600160e01b0319169052565b603a019b9a5050505050505050505050565b5f83516120828184602088016118f9565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b5f84516120b88184602089016118f9565b6001600160e01b031960e095861b8116919093019081529290931b16600482015260080192915050565b5f83516120f38184602088016118f9565b60c09390931b6001600160c01b0319169190920190815260080192915050565b5f82516121248184602087016118f9565b9190910192915050565b5f6020828403121561213e575f80fd5b505191905056fea164736f6c6343000819000a",
    "sourceMap": "450:26996:97:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20854:1121;;;;;;:::i;:::-;;:::i;:::-;;;;2496:25:156;;;2564:14;;2557:22;2552:2;2537:18;;2530:50;2469:18;20854:1121:97;;;;;;;;26222:1222;;;;;;:::i;:::-;;:::i;:::-;;;;2878:25:156;;;-1:-1:-1;;;;;2939:31:156;;;2934:2;2919:18;;2912:59;2851:18;26222:1222:97;2698:279:156;3542:1031:97;;;;;;:::i;:::-;;:::i;:::-;;;3136:25:156;;;3124:2;3109:18;3542:1031:97;2982:185:156;23501:1416:97;;;;;;:::i;:::-;;:::i;:::-;;;;3378:25:156;;;-1:-1:-1;;;;;3476:15:156;;;3471:2;3456:18;;3449:43;3528:15;;3508:18;;;3501:43;3366:2;3351:18;23501:1416:97;3172:378:156;3024:233:97;;;;;;:::i;:::-;3169:81;;;1080:1;3169:81;;;15224:51:156;;;15291:11;;;15284:64;15364:11;;;;15357:27;;;;3169:81:97;;;;;;;;;;15400:12:156;;3169:81:97;;;3024:233;;;;;;;;:::i;22922:294::-;;;;;;:::i;:::-;23095:114;;;1080:1;23095:114;;;15656:51:156;-1:-1:-1;;;15723:11:156;;;15716:64;15796:11;;;15789:27;;;;-1:-1:-1;;;;;;15839:3:156;15897:16;;;15893:25;;15879:12;;;15872:47;15953:16;;;;15949:25;15935:12;;;15928:47;23095:114:97;;;;;;;;;15991:12:156;;;;23095:114:97;;;22922:294;6941:1259;;;;;;:::i;:::-;;:::i;13205:6099::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;20163:273::-;;;;;;:::i;:::-;;:::i;25707:240::-;;;;;;:::i;:::-;;:::i;11445:1472::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;20854:1121::-;20967:7;20976:4;21000:5;:12;21016:2;21000:18;20996:102;;21069:12;;21041:46;;-1:-1:-1;;;21041:46:97;;12997:10:156;13034:15;;;21041:46:97;;;13016:34:156;21084:2:97;13066:18:156;;;13059:43;12960:18;;21041:46:97;;;;;;;;20996:102;21138:14;21167:9;21162:112;21182:1;21178;:5;21162:112;;;21255:5;21259:1;21255;:5;:::i;:::-;21250:11;;:1;:11;:::i;:::-;21215:48;;21228:5;21234:1;21228:8;;;;;;;;:::i;:::-;;;;;;;21215:48;;21204:59;;;;;21185:3;;21162:112;;;-1:-1:-1;21287:19:97;;;;21283:80;;21329:23;;-1:-1:-1;;;21329:23:97;;13857:6:156;13845:19;;21329:23:97;;;13827:38:156;13800:18;;21329:23:97;13683:188:156;21283:80:97;21403:13;21431:9;21426:115;21446:1;21442;:5;21426:115;;;21522:5;21526:1;21522;:5;:::i;:::-;21517:11;;:1;:11;:::i;:::-;21478:52;;21491:5;21497;:1;21501;21497:5;:::i;:::-;21491:12;;;;;;;;:::i;:::-;;;;;;;21478:52;;21468:62;;;;;21449:3;;21426:115;;;-1:-1:-1;21554:51:97;;;1646:1;21554:51;21550:109;;21628:20;;-1:-1:-1;;;21628:20:97;;;;;;;;;;;21550:109;21706:20;21741:9;21736:125;21756:2;21752:1;:6;21736:125;;;21841:6;21846:1;21841:2;:6;:::i;:::-;21836:12;;:1;:12;:::i;:::-;21817:5;21823;:1;21827;21823:5;:::i;:::-;21817:12;;;;;;;;:::i;:::-;;;;;;;21803:46;;21779:71;;;;;21760:3;;21736:125;;;;21902:10;21915:5;21921:2;21915:9;;;;;;;;:::i;:::-;;;;;21948:12;;-1:-1:-1;;;;;;21915:9:97;;;:14;;;-1:-1:-1;20854:1121:97;;-1:-1:-1;;;;;20854:1121:97:o;26222:1222::-;26328:7;26337:6;26363:5;:12;26379:2;26363:18;26359:102;;26432:12;;26404:46;;-1:-1:-1;;;26404:46:97;;12997:10:156;13034:15;;;26404:46:97;;;13016:34:156;26447:2:97;13066:18:156;;;13059:43;12960:18;;26404:46:97;12807:301:156;26359:102:97;26503:14;26532:9;26527:112;26547:1;26543;:5;26527:112;;;26620:5;26624:1;26620;:5;:::i;:::-;26615:11;;:1;:11;:::i;:::-;26580:48;;26593:5;26599:1;26593:8;;;;;;;;:::i;:::-;;;;;;;26580:48;;26569:59;;;;;26550:3;;26527:112;;;-1:-1:-1;26652:19:97;;;;26648:80;;26694:23;;-1:-1:-1;;;26694:23:97;;13857:6:156;13845:19;;26694:23:97;;;13827:38:156;13800:18;;26694:23:97;13683:188:156;26648:80:97;26769:13;26797:9;26792:115;26812:1;26808;:5;26792:115;;;26888:5;26892:1;26888;:5;:::i;:::-;26883:11;;:1;:11;:::i;:::-;26844:52;;26857:5;26863;:1;26867;26863:5;:::i;:::-;26857:12;;;;;;;;:::i;:::-;;;;;;;26844:52;;26834:62;;;;;26815:3;;26792:115;;;-1:-1:-1;26920:43:97;;;;26916:101;;26986:20;;-1:-1:-1;;;26986:20:97;;;;;;;;;;;26916:101;27064:20;27099:9;27094:125;27114:2;27110:1;:6;27094:125;;;27199:6;27204:1;27199:2;:6;:::i;:::-;27194:12;;:1;:12;:::i;:::-;27175:5;27181;:1;27185;27181:5;:::i;:::-;27175:12;;;;;;;;:::i;:::-;;;;;;;27161:46;;27137:71;;;;;27118:3;;27094:125;;;;27259:13;27287:9;27282:116;27302:1;27298;:5;27282:116;;;27379:5;27383:1;27379;:5;:::i;:::-;27374:11;;:1;:11;:::i;:::-;-1:-1:-1;;;;;27334:53:97;27347:5;27353:6;:1;27357:2;27353:6;:::i;:::-;27347:13;;;;;;;;:::i;:::-;;;;;;;27334:53;;27324:63;;;;;27305:3;;27282:116;;;-1:-1:-1;27416:12:97;;27430:6;;-1:-1:-1;26222:1222:97;-1:-1:-1;;;;26222:1222:97:o;3542:1031::-;3652:7;3679:5;:12;3695:2;3679:18;3675:102;;3748:12;;3720:46;;-1:-1:-1;;;3720:46:97;;12997:10:156;13034:15;;;3720:46:97;;;13016:34:156;3763:2:97;13066:18:156;;;13059:43;12960:18;;3720:46:97;12807:301:156;3675:102:97;3818:14;3847:9;3842:112;3862:1;3858;:5;3842:112;;;3935:5;3939:1;3935;:5;:::i;:::-;3930:11;;:1;:11;:::i;:::-;3895:48;;3908:5;3914:1;3908:8;;;;;;;;:::i;:::-;;;;;;;3895:48;;3884:59;;;;;3865:3;;3842:112;;;-1:-1:-1;3967:19:97;;;;3963:80;;4009:23;;-1:-1:-1;;;4009:23:97;;13857:6:156;13845:19;;4009:23:97;;;13827:38:156;13800:18;;4009:23:97;13683:188:156;3963:80:97;4083:13;4111:9;4106:115;4126:1;4122;:5;4106:115;;;4202:5;4206:1;4202;:5;:::i;:::-;4197:11;;:1;:11;:::i;:::-;4158:52;;4171:5;4177;:1;4181;4177:5;:::i;:::-;4171:12;;;;;;;;:::i;:::-;;;;;;;4158:52;;4148:62;;;;;4129:3;;4106:115;;;-1:-1:-1;4234:49:97;;;;4230:107;;4306:20;;-1:-1:-1;;;4306:20:97;;;;;;;;;;;4230:107;4382:20;4417:9;4412:125;4432:2;4428:1;:6;4412:125;;;4517:6;4522:1;4517:2;:6;:::i;:::-;4512:12;;:1;:12;:::i;:::-;4493:5;4499;:1;4503;4499:5;:::i;:::-;4493:12;;;;;;;;:::i;:::-;;;;;;;4479:46;;4455:71;;;;;4436:3;;4412:125;;;-1:-1:-1;4554:12:97;3542:1031;-1:-1:-1;;;;3542:1031:97:o;23501:1416::-;23608:7;23617:6;23625;23651:5;:12;23667:2;23651:18;23647:102;;23720:12;;23692:46;;-1:-1:-1;;;23692:46:97;;12997:10:156;13034:15;;;23692:46:97;;;13016:34:156;23735:2:97;13066:18:156;;;13059:43;12960:18;;23692:46:97;12807:301:156;23647:102:97;23791:14;23820:9;23815:112;23835:1;23831;:5;23815:112;;;23908:5;23912:1;23908;:5;:::i;:::-;23903:11;;:1;:11;:::i;:::-;23868:48;;23881:5;23887:1;23881:8;;;;;;;;:::i;:::-;;;;;;;23868:48;;23857:59;;;;;23838:3;;23815:112;;;-1:-1:-1;23940:19:97;;;;23936:80;;23982:23;;-1:-1:-1;;;23982:23:97;;13857:6:156;13845:19;;23982:23:97;;;13827:38:156;13800:18;;23982:23:97;13683:188:156;23936:80:97;24057:13;24085:9;24080:115;24100:1;24096;:5;24080:115;;;24176:5;24180:1;24176;:5;:::i;:::-;24171:11;;:1;:11;:::i;:::-;24132:52;;24145:5;24151;:1;24155;24151:5;:::i;:::-;24145:12;;;;;;;;:::i;:::-;;;;;;;24132:52;;24122:62;;;;;24103:3;;24080:115;;;-1:-1:-1;24208:45:97;;;1910:1;24208:45;24204:103;;24276:20;;-1:-1:-1;;;24276:20:97;;;;;;;;;;;24204:103;24354:20;24389:9;24384:125;24404:2;24400:1;:6;24384:125;;;24489:6;24494:1;24489:2;:6;:::i;:::-;24484:12;;:1;:12;:::i;:::-;24465:5;24471;:1;24475;24471:5;:::i;:::-;24465:12;;;;;;;;:::i;:::-;;;;;;;24451:46;;24427:71;;;;;24408:3;;24384:125;;;;24548:12;24575:9;24570:115;24590:1;24586;:5;24570:115;;;24666:5;24670:1;24666;:5;:::i;:::-;24661:11;;:1;:11;:::i;:::-;-1:-1:-1;;;;;24621:53:97;24634:5;24640:6;:1;24644:2;24640:6;:::i;:::-;24634:13;;;;;;;;:::i;:::-;;;;;;;24621:53;;24612:62;;;;;24593:3;;24570:115;;;;24725:13;24753:9;24748:116;24768:1;24764;:5;24748:116;;;24845:5;24849:1;24845;:5;:::i;:::-;24840:11;;:1;:11;:::i;:::-;-1:-1:-1;;;;;24800:53:97;24813:5;24819:6;:1;24823:2;24819:6;:::i;:::-;24813:13;;;;;;;;:::i;:::-;;;;;;;24800:53;;24790:63;;;;;24771:3;;24748:116;;;-1:-1:-1;24882:12:97;;24896:5;;-1:-1:-1;24882:12:97;;-1:-1:-1;23501:1416:97;-1:-1:-1;;;;23501:1416:97:o;6941:1259::-;7286:23;;7323:43;;;;;7404:38;;;;;7054:12;7463:32;;;;:39;7234:279;;7215:16;7234:279;;;16277:51:156;;;16344:11;;;16337:27;;;;16380:12;;;16373:28;;;;-1:-1:-1;;;16456:12:156;;;16449:47;-1:-1:-1;;16530:15:156;;;16526:53;16512:12;;;16505:75;16424:3;16614:16;-1:-1:-1;;;;;;16610:25:156;16596:12;;;16589:47;7054:12:97;16652::156;;7234:279:97;;;;;;;;;;;;7215:298;;7770:9;7765:409;7785:14;:32;;;:39;7781:1;:43;7765:409;;;7885:3;7913:14;:32;;;7946:1;7913:35;;;;;;;;:::i;:::-;;;;;;;:42;;;:49;7981:14;:32;;;8014:1;7981:35;;;;;;;;:::i;:::-;;;;;;;:42;;;8041:14;:32;;;8074:1;8041:35;;;;;;;;:::i;:::-;;;;;;;:48;;;8107:14;:32;;;8140:1;8107:35;;;;;;;;:::i;:::-;;;;;;;:42;;;7851:312;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;7851:312:97;;;;;;;;;;-1:-1:-1;7826:3:97;;7765:409;;;-1:-1:-1;8190:3:97;6941:1259;-1:-1:-1;;6941:1259:97:o;13205:6099::-;13314:23;;:::i;:::-;13353:12;13379:34;;:::i;:::-;13563:14;13596:9;13591:128;13611:1;13607;:5;13591:128;;;13696:5;13700:1;13696;:5;:::i;:::-;13691:11;;:1;:11;:::i;:::-;13648:56;;13661:5;13667:9;;;;:1;:9;:::i;:::-;13661:16;;;;;;;;:::i;:::-;;;;;;;13648:56;;13637:67;;;;;13614:3;;13591:128;;;-1:-1:-1;13736:19:97;;;;13732:88;;13782:23;;-1:-1:-1;;;13782:23:97;;13857:6:156;13845:19;;13782:23:97;;;13827:38:156;13800:18;;13782:23:97;13683:188:156;13732:88:97;13833:10;13842:1;13833:10;;:::i;:::-;;;13549:305;13908:13;13940:9;13935:127;13955:1;13951;:5;13935:127;;;14039:5;14043:1;14039;:5;:::i;:::-;14034:11;;:1;:11;:::i;:::-;13991:56;;14004:5;14014;14010:9;;:1;:9;;;;:::i;:::-;14004:16;;;;;;;;:::i;:::-;;;;;;;13991:56;;13981:66;;;;;13958:3;;13935:127;;;-1:-1:-1;14079:47:97;;;1420:1;14079:47;14075:113;;14153:20;;-1:-1:-1;;;14153:20:97;;;;;;;;;;;14075:113;14201:10;14210:1;14201:10;;:::i;:::-;;;13894:328;14277:16;14312:9;14307:133;14327:2;14323:1;:6;14307:133;;;14416:6;14421:1;14416:2;:6;:::i;:::-;14411:12;;:1;:12;:::i;:::-;14388:5;14394:9;;;;:1;:9;:::i;:::-;14388:16;;;;;;;;:::i;:::-;;;;;;;14374:50;;14354:71;;;;;14331:3;;14307:133;;;-1:-1:-1;14453:30:97;;;14497:11;14506:2;14497:11;;:::i;:::-;;;14263:256;14565:19;14613:9;14608:133;14628:1;14624;:5;14608:133;;;14718:5;14722:1;14718;:5;:::i;:::-;14713:11;;:1;:11;:::i;:::-;14670:56;;14683:5;14693;14689:9;;:1;:9;;;;:::i;:::-;14683:16;;;;;;;;:::i;:::-;;;;;;;14670:56;;14654:72;;;;;14631:3;;14608:133;;;-1:-1:-1;14754:10:97;14763:1;14754:10;;:::i;:::-;;;14812:19;14844:12;14834:23;;-1:-1:-1;;;;;14834:23:97;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14834:23:97;;14812:45;;14876:9;14871:100;14891:12;14887:16;;:1;:16;14871:100;;;14940:5;14946:9;;;;:1;:9;:::i;:::-;14940:16;;;;;;;;:::i;:::-;;;;;;;;;14928:6;14935:1;14928:9;;;;;;;;:::i;:::-;;;;:28;-1:-1:-1;;;;;14928:28:97;;;;;;;;-1:-1:-1;14905:3:97;;14871:100;;;-1:-1:-1;14984:17:97;;;:26;;;15024:21;15033:12;15024:21;;:::i;:::-;15143:13;;;15153:2;15143:13;;;;;;;;;15024:21;;-1:-1:-1;15115:25:97;;-1:-1:-1;15143:13:97;;;;;;;;;;-1:-1:-1;15143:13:97;15115:41;;15175:9;15170:96;15190:2;15186:1;:6;15170:96;;;15235:5;15241:9;;;;:1;:9;:::i;:::-;15235:16;;;;;;;;:::i;:::-;;;;;;;;;15217:12;15230:1;15217:15;;;;;;;;:::i;:::-;;;;:34;-1:-1:-1;;;;;15217:34:97;;;;;;;;-1:-1:-1;15194:3:97;;15170:96;;;-1:-1:-1;15279:23:97;;;:38;;;15331:11;15340:2;15331:11;;:::i;:::-;;;15101:252;15419:13;15451:9;15446:127;15466:1;15462;:5;15446:127;;;15550:5;15554:1;15550;:5;:::i;:::-;15545:11;;:1;:11;:::i;:::-;-1:-1:-1;;;;;15502:56:97;15515:5;15521:9;;;;:1;:9;:::i;:::-;15515:16;;;;;;;;:::i;:::-;;;;;;;15502:56;;15492:66;;;;;15469:3;;15446:127;;;-1:-1:-1;;;;;;15586:38:97;;:29;;;:38;15638:10;15647:1;15638:10;;:::i;:::-;;;15405:254;15723:43;15790:37;15846:9;15841:171;15861:1;15857;:5;15841:171;;;15989:5;15993:1;15989;:5;:::i;:::-;15984:11;;:1;:11;:::i;:::-;15941:56;;15954:5;15964;15960:9;;:1;:9;;;;:::i;:::-;15954:16;;;;;;;;:::i;:::-;;;;;;;15941:56;;15887:110;;;;;15864:3;;15841:171;;;-1:-1:-1;16025:10:97;16034:1;16025:10;;:::i;:::-;;;16120:9;16115:177;16135:1;16131;:5;16115:177;;;16269:5;16273:1;16269;:5;:::i;:::-;16264:11;;:1;:11;:::i;:::-;16221:56;;16234:5;16244;16240:9;;:1;:9;;;;:::i;:::-;16234:16;;;;;;;;:::i;:::-;;;;;;;16221:56;;16161:116;;;;;16138:3;;16115:177;;;-1:-1:-1;16305:10:97;16314:1;16305:10;;:::i;:::-;;;16388:47;16468:36;16454:51;;-1:-1:-1;;;;;16454:51:97;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16454:51:97;;16388:117;;16524:9;16519:532;16539:36;16535:40;;:1;:40;16519:532;;;16625:13;;;16635:2;16625:13;;;;;;;;;16600:22;;16625:13;;;;;;;;;;-1:-1:-1;16625:13:97;16600:38;;16661:9;16656:101;16676:2;16672:1;:6;16656:101;;;16722:5;16728:9;;;;:1;:9;:::i;:::-;16722:16;;;;;;;;:::i;:::-;;;;;;;;;16707:9;16717:1;16707:12;;;;;;;;:::i;:::-;;;;:31;-1:-1:-1;;;;;16707:31:97;;;;;;;;-1:-1:-1;16680:3:97;;16656:101;;;;16774:12;16928:2;16917:9;16913:18;16907:25;16899:33;;17003:4;16967:30;16998:1;16967:33;;;;;;;;:::i;:::-;-1:-1:-1;;;;;16967:40:97;;;:33;;;;;;;;;;;:40;17025:11;17034:2;17025:11;;:::i;:::-;;;16582:469;;16577:3;;;;;16519:532;;;-1:-1:-1;17099:145:97;;;;;;;;;;;;;;;;;;;17064:32;;;:180;-1:-1:-1;;;17410:142:97;17430:1;17426;:5;17410:142;;;17529:5;17533:1;17529;:5;:::i;:::-;17524:11;;:1;:11;:::i;:::-;17481:56;;17494:5;17504;17500:9;;:1;:9;;;;:::i;:::-;17494:16;;;;;;;;:::i;:::-;;;;;;;17481:56;;17456:81;;;;;17433:3;;17410:142;;;-1:-1:-1;17565:10:97;17574:1;17565:10;;:::i;:::-;;;17651:9;17646:168;17666:1;17662;:5;17646:168;;;17791:5;17795:1;17791;:5;:::i;:::-;17786:11;;:1;:11;:::i;:::-;17743:56;;17756:5;17766;17762:9;;:1;:9;;;;:::i;:::-;17756:16;;;;;;;;:::i;:::-;;;;;;;17743:56;;17692:107;;;;;17669:3;;17646:168;;;-1:-1:-1;17827:10:97;17836:1;17827:10;;:::i;:::-;;;17901:38;17956:27;17942:42;;-1:-1:-1;;;;;17942:42:97;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17942:42:97;;17901:83;;18003:9;17998:514;18018:27;18014:31;;:1;:31;17998:514;;;18095:13;;;18105:2;18095:13;;;;;;;;;18070:22;;18095:13;;;;;;;;;;-1:-1:-1;18095:13:97;18070:38;;18131:9;18126:101;18146:2;18142:1;:6;18126:101;;;18192:5;18198:9;;;;:1;:9;:::i;:::-;18192:16;;;;;;;;:::i;:::-;;;;;;;;;18177:9;18187:1;18177:12;;;;;;;;:::i;:::-;;;;:31;-1:-1:-1;;;;;18177:31:97;;;;;;;;-1:-1:-1;18150:3:97;;18126:101;;;;18244:12;18398:2;18387:9;18383:18;18377:25;18369:33;;18464:4;18437:21;18459:1;18437:24;;;;;;;;:::i;:::-;-1:-1:-1;;;;;18437:31:97;;;:24;;;;;;;;;;;:31;18486:11;18495:2;18486:11;;:::i;:::-;;;18052:460;;18047:3;;;;;17998:514;;;-1:-1:-1;18567:81:97;;;;;;;;;;;;;;;;;;;18525:23;;;:123;-1:-1:-1;18806:66:97;18845:27;18806:36;:66;:::i;:::-;18805:73;;18876:2;18805:73;:::i;:::-;18772:18;18778:12;18772:3;:18;:::i;:::-;:106;;;;:::i;:::-;18748:130;;18908:14;18892:30;;:5;:12;:30;18888:126;;18973:12;;18945:58;;-1:-1:-1;;;18945:58:97;;12997:10:156;13034:15;;;18945:58:97;;;13016:34:156;13086:15;;;13066:18;;;13059:43;12960:18;;18945:58:97;12807:301:156;18888:126:97;19066:13;19098:9;19093:127;19113:1;19109;:5;19093:127;;;19197:5;19201:1;19197;:5;:::i;:::-;19192:11;;:1;:11;:::i;:::-;-1:-1:-1;;;;;19149:56:97;19162:5;19168:9;;;;:1;:9;:::i;:::-;19162:16;;;;;;;;:::i;:::-;;;;;;;19149:56;;19139:66;;;;;19116:3;;19093:127;;;-1:-1:-1;;;;;;19233:26:97;:17;;;:26;-1:-1:-1;19233:10:97;;13205:6099;-1:-1:-1;;;;;;13205:6099:97:o;20163:273::-;20317:112;;1080:1;20317:112;;;18543:51:156;-1:-1:-1;;;18610:11:156;;;18603:64;18683:11;;;18676:27;;;18749:14;;18742:22;18737:3;18733:32;18719:12;;;18712:54;20286:12:97;;18782::156;;20317:112:97;;;;;;;;;;;;;20310:119;;20163:273;;;;;:::o;25707:240::-;25857:83;;1080:1;25857:83;;;19012:51:156;;;19079:11;;;19072:64;19152:11;;;19145:27;;;-1:-1:-1;;;;;;19228:3:156;19206:16;;;19202:51;19188:12;;;19181:73;25826:12:97;;19270::156;;25857:83:97;18805:483:156;11445:1472:97;11574:7;11583:12;11615:16;:29;;;:36;11655:2;11615:42;11611:101;;11680:21;;-1:-1:-1;;;11680:21:97;;;;;;;;;;;11611:101;11903:25;;11949:23;;;;;:30;;12031:29;;;;;12074:35;;;;12123:38;;;;:48;;12192;;;;:55;11800:458;;11781:16;;11800:458;;11781:16;;1420:1;;11903:25;;11949:30;;:23;;12031:29;;12074:35;;12123:48;;12192:55;11800:458;;:::i;:::-;;;;;;;;;;;;;11781:477;;12273:9;12268:187;12288:16;:38;;;:48;;;:55;12284:1;:59;12268:187;;;12387:3;12392:16;:38;;;:48;;;12441:1;12392:51;;;;;;;;:::i;:::-;;;;;;;12370:74;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12370:74:97;;;;;;;;;;-1:-1:-1;12345:3:97;;12268:187;;;-1:-1:-1;12517:29:97;;;;:39;;12577;;;;;:46;12470:164;;;;12500:3;;12517:39;12577:46;12470:164;;:::i;:::-;;;;;;;;;;;;;12464:170;;12649:9;12644:169;12664:16;:29;;;:39;;;:46;12660:1;:50;12644:169;;;12754:3;12759:16;:29;;;:39;;;12799:1;12759:42;;;;;;;;:::i;:::-;;;;;;;12737:65;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12737:65:97;;;;;;;;;;-1:-1:-1;12712:3:97;;12644:169;;;-1:-1:-1;12850:23:97;;;;12828:46;;;;12845:3;;12828:46;;;:::i;:::-;;;;;;;;;;;;;12822:52;;12893:11;12900:3;12893:11;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12885:25;12906:3;;-1:-1:-1;11445:1472:97;-1:-1:-1;;11445:1472:97:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:127:156:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:253;218:2;212:9;260:4;248:17;;-1:-1:-1;;;;;280:34:156;;316:22;;;277:62;274:88;;;342:18;;:::i;:::-;378:2;371:22;146:253;:::o;404:251::-;476:2;470:9;518:2;506:15;;-1:-1:-1;;;;;536:34:156;;572:22;;;533:62;530:88;;;598:18;;:::i;660:257::-;732:4;726:11;;;764:17;;-1:-1:-1;;;;;796:34:156;;832:22;;;793:62;790:88;;;858:18;;:::i;922:253::-;994:2;988:9;1036:4;1024:17;;-1:-1:-1;;;;;1056:34:156;;1092:22;;;1053:62;1050:88;;;1118:18;;:::i;1180:275::-;1251:2;1245:9;1316:2;1297:13;;-1:-1:-1;;1293:27:156;1281:40;;-1:-1:-1;;;;;1336:34:156;;1372:22;;;1333:62;1330:88;;;1398:18;;:::i;:::-;1434:2;1427:22;1180:275;;-1:-1:-1;1180:275:156:o;1460:530::-;1502:5;1555:3;1548:4;1540:6;1536:17;1532:27;1522:55;;1573:1;1570;1563:12;1522:55;1609:6;1596:20;-1:-1:-1;;;;;1631:2:156;1628:26;1625:52;;;1657:18;;:::i;:::-;1701:55;1744:2;1725:13;;-1:-1:-1;;1721:27:156;1750:4;1717:38;1701:55;:::i;:::-;1781:2;1772:7;1765:19;1827:3;1820:4;1815:2;1807:6;1803:15;1799:26;1796:35;1793:55;;;1844:1;1841;1834:12;1793:55;1909:2;1902:4;1894:6;1890:17;1883:4;1874:7;1870:18;1857:55;1957:1;1932:16;;;1950:4;1928:27;1921:38;;;;1936:7;1460:530;-1:-1:-1;;;1460:530:156:o;1995:320::-;2063:6;2116:2;2104:9;2095:7;2091:23;2087:32;2084:52;;;2132:1;2129;2122:12;2084:52;2172:9;2159:23;-1:-1:-1;;;;;2197:6:156;2194:30;2191:50;;;2237:1;2234;2227:12;2191:50;2260:49;2301:7;2292:6;2281:9;2277:22;2260:49;:::i;:::-;2250:59;1995:320;-1:-1:-1;;;;1995:320:156:o;3555:180::-;3614:6;3667:2;3655:9;3646:7;3642:23;3638:32;3635:52;;;3683:1;3680;3673:12;3635:52;-1:-1:-1;3706:23:156;;3555:180;-1:-1:-1;3555:180:156:o;3740:250::-;3825:1;3835:113;3849:6;3846:1;3843:13;3835:113;;;3925:11;;;3919:18;3906:11;;;3899:39;3871:2;3864:10;3835:113;;;-1:-1:-1;;3982:1:156;3964:16;;3957:27;3740:250::o;3995:270::-;4036:3;4074:5;4068:12;4101:6;4096:3;4089:19;4117:76;4186:6;4179:4;4174:3;4170:14;4163:4;4156:5;4152:16;4117:76;:::i;:::-;4247:2;4226:15;-1:-1:-1;;4222:29:156;4213:39;;;;4254:4;4209:50;;3995:270;-1:-1:-1;;3995:270:156:o;4270:225::-;4425:2;4414:9;4407:21;4388:4;4445:44;4485:2;4474:9;4470:18;4462:6;4445:44;:::i;:::-;4437:52;4270:225;-1:-1:-1;;;4270:225:156:o;4500:171::-;4567:20;;-1:-1:-1;;;;;4616:30:156;;4606:41;;4596:69;;4661:1;4658;4651:12;4596:69;4500:171;;;:::o;4676:324::-;4751:6;4759;4767;4820:2;4808:9;4799:7;4795:23;4791:32;4788:52;;;4836:1;4833;4826:12;4788:52;4872:9;4859:23;4849:33;;4901:37;4934:2;4923:9;4919:18;4901:37;:::i;:::-;4891:47;;4957:37;4990:2;4979:9;4975:18;4957:37;:::i;:::-;4947:47;;4676:324;;;;;:::o;5005:173::-;5073:20;;-1:-1:-1;;;;;5122:31:156;;5112:42;;5102:70;;5168:1;5165;5158:12;5183:199;5259:4;-1:-1:-1;;;;;5284:6:156;5281:30;5278:56;;;5314:18;;:::i;:::-;-1:-1:-1;5359:1:156;5355:14;5371:4;5351:25;;5183:199::o;5387:2094::-;5479:6;5510:2;5553;5541:9;5532:7;5528:23;5524:32;5521:52;;;5569:1;5566;5559:12;5521:52;5609:9;5596:23;-1:-1:-1;;;;;5679:2:156;5671:6;5668:14;5665:34;;;5695:1;5692;5685:12;5665:34;5718:22;;;;5774:4;5756:16;;;5752:27;5749:47;;;5792:1;5789;5782:12;5749:47;5818:22;;:::i;:::-;5876:2;5863:16;5856:5;5849:31;5933:2;5929;5925:11;5912:25;5907:2;5900:5;5896:14;5889:49;5970:31;5997:2;5993;5989:11;5970:31;:::i;:::-;5965:2;5958:5;5954:14;5947:55;6021:2;6069;6065;6061:11;6048:25;6098:2;6088:8;6085:16;6082:36;;;6114:1;6111;6104:12;6082:36;6145:8;6141:2;6137:17;6127:27;;;6192:7;6185:4;6181:2;6177:13;6173:27;6163:55;;6214:1;6211;6204:12;6163:55;6250:2;6237:16;6273:76;6289:59;6345:2;6289:59;:::i;:::-;6273:76;:::i;:::-;6383:15;;;6465:1;6461:10;;;;6453:19;;6449:28;;;6414:12;;;;6489:19;;;6486:39;;;6521:1;6518;6511:12;6486:39;6553:2;6549;6545:11;6565:848;6581:6;6576:3;6573:15;6565:848;;;6667:3;6654:17;6703:2;6690:11;6687:19;6684:39;;;6719:1;6716;6709:12;6684:39;6746:20;;6790:16;;;-1:-1:-1;;6786:30:156;6782:39;-1:-1:-1;6779:59:156;;;6834:1;6831;6824:12;6779:59;6866:22;;:::i;:::-;6938:2;6934;6930:11;6917:25;6971:2;6961:8;6958:16;6955:36;;;6987:1;6984;6977:12;6955:36;7020:53;7065:7;7060:2;7049:8;7045:2;7041:17;7037:26;7020:53;:::i;:::-;7011:7;7004:70;;7124:2;7120;7116:11;7103:25;7157:2;7147:8;7144:16;7141:36;;;7173:1;7170;7163:12;7141:36;7215:53;7260:7;7255:2;7244:8;7240:2;7236:17;7232:26;7215:53;:::i;:::-;7210:2;7201:7;7197:16;7190:79;;7307:30;7333:2;7329;7325:11;7307:30;:::i;:::-;7302:2;7289:16;;7282:56;7351:20;;-1:-1:-1;7391:12:156;;;;6598;;6565:848;;;-1:-1:-1;7440:2:156;7429:14;;7422:29;-1:-1:-1;7433:5:156;;5387:2094;-1:-1:-1;;;;;;;;5387:2094:156:o;7486:690::-;7540:3;7579:4;7574:3;7570:14;7623:10;7615:5;7609:12;7605:29;7600:3;7593:42;7654:4;7704;7697:5;7693:16;7687:23;7742:4;7735;7730:3;7726:14;7719:28;7769:4;7802:12;7796:19;7837:6;7831:4;7824:20;7871:2;7866:3;7862:12;7853:21;;7915:4;7901:12;7897:23;7883:37;;7938:1;7929:10;;7948:201;7962:6;7959:1;7956:13;7948:201;;;8029:13;;-1:-1:-1;;;;;8025:39:156;8011:54;;8124:15;;;;8061:1;7977:9;;;;;8087:14;;;;7948:201;;;-1:-1:-1;8165:5:156;7486:690;-1:-1:-1;;;;;;7486:690:156:o;8181:1266::-;8388:2;8377:9;8370:21;8433:6;8427:13;8422:2;8411:9;8407:18;8400:41;8351:4;8488:2;8480:6;8476:15;8470:22;8528:4;8523:2;8512:9;8508:18;8501:32;8556:51;8602:3;8591:9;8587:19;8573:12;8556:51;:::i;:::-;8542:65;;8656:2;8648:6;8644:15;8638:22;8683:2;8679:7;8750:2;8738:9;8730:6;8726:22;8722:31;8717:2;8706:9;8702:18;8695:59;8777:40;8810:6;8794:14;8777:40;:::i;:::-;8763:54;;-1:-1:-1;;;;;8876:2:156;8868:6;8864:15;8858:22;8854:47;8848:3;8837:9;8833:19;8826:76;8951:3;8943:6;8939:16;8933:23;8911:45;;9021:2;9009:9;9001:6;8997:22;8993:31;8987:3;8976:9;8972:19;8965:60;9048:53;9094:6;9078:14;9048:53;:::i;:::-;9034:67;;9150:3;9142:6;9138:16;9132:23;9110:45;;9220:2;9208:9;9200:6;9196:22;9192:31;9186:3;9175:9;9171:19;9164:60;;9247:53;9293:6;9277:14;9247:53;:::i;:::-;9233:67;;;9349:3;9341:6;9337:16;9331:23;9363:55;9412:4;9401:9;9397:20;9381:14;-1:-1:-1;;;;;2656:30:156;2644:43;;2591:102;9363:55;-1:-1:-1;9435:6:156;8181:1266;-1:-1:-1;;;8181:1266:156:o;9452:341::-;9517:6;9525;9578:2;9566:9;9557:7;9553:23;9549:32;9546:52;;;9594:1;9591;9584:12;9546:52;9630:9;9617:23;9607:33;;9690:2;9679:9;9675:18;9662:32;9737:5;9730:13;9723:21;9716:5;9713:32;9703:60;;9759:1;9756;9749:12;9703:60;9782:5;9772:15;;;9452:341;;;;;:::o;9798:252::-;9865:6;9873;9926:2;9914:9;9905:7;9901:23;9897:32;9894:52;;;9942:1;9939;9932:12;9894:52;9978:9;9965:23;9955:33;;10007:37;10040:2;10029:9;10025:18;10007:37;:::i;:::-;9997:47;;9798:252;;;;;:::o;10055:1091::-;10113:5;10161:4;10149:9;10144:3;10140:19;10136:30;10133:50;;;10179:1;10176;10169:12;10133:50;10201:22;;:::i;:::-;10192:31;;10260:9;10247:23;10314:10;10305:7;10301:24;10292:7;10289:37;10279:65;;10340:1;10337;10330:12;10279:65;10353:22;;10394:2;10432:18;;;10419:32;-1:-1:-1;;;;;10463:30:156;;10460:50;;;10506:1;10503;10496:12;10460:50;10529:22;;10582:4;10574:13;;10570:23;-1:-1:-1;10560:51:156;;10607:1;10604;10597:12;10560:51;10643:2;10630:16;10666:76;10682:59;10738:2;10682:59;:::i;10666:76::-;10776:15;;;10858:1;10854:10;;;;10846:19;;10842:28;;;10807:12;;;;10882:15;;;10879:35;;;10910:1;10907;10900:12;10879:35;10934:11;;;;10954:148;10970:6;10965:3;10962:15;10954:148;;;11036:23;11055:3;11036:23;:::i;:::-;11024:36;;10987:12;;;;11080;;;;10954:148;;;11134:5;11129:2;11122:5;11118:14;11111:29;;;;;;10055:1091;;;;:::o;11151:1350::-;11245:6;11298:2;11286:9;11277:7;11273:23;11269:32;11266:52;;;11314:1;11311;11304:12;11266:52;11354:9;11341:23;-1:-1:-1;;;;;11424:2:156;11416:6;11413:14;11410:34;;;11440:1;11437;11430:12;11410:34;11463:22;;;;11519:4;11501:16;;;11497:27;11494:47;;;11537:1;11534;11527:12;11494:47;11563:22;;:::i;:::-;11621:2;11608:16;11601:5;11594:31;11671:2;11667;11663:11;11650:25;11700:2;11690:8;11687:16;11684:36;;;11716:1;11713;11706:12;11684:36;11752:44;11788:7;11777:8;11773:2;11769:17;11752:44;:::i;:::-;11747:2;11740:5;11736:14;11729:68;;11843:2;11839;11835:11;11822:25;11872:2;11862:8;11859:16;11856:36;;;11888:1;11885;11878:12;11856:36;11924:44;11960:7;11949:8;11945:2;11941:17;11924:44;:::i;:::-;11919:2;11912:5;11908:14;11901:68;;12001:30;12027:2;12023;12019:11;12001:30;:::i;:::-;11996:2;11989:5;11985:14;11978:54;12078:3;12074:2;12070:12;12057:26;12108:2;12098:8;12095:16;12092:36;;;12124:1;12121;12114:12;12092:36;12161:57;12210:7;12199:8;12195:2;12191:17;12161:57;:::i;:::-;12155:3;12148:5;12144:15;12137:82;;12265:3;12261:2;12257:12;12244:26;12295:2;12285:8;12282:16;12279:36;;;12311:1;12308;12301:12;12279:36;12348:57;12397:7;12386:8;12382:2;12378:17;12348:57;:::i;:::-;12342:3;12335:5;12331:15;12324:82;;12439:31;12465:3;12461:2;12457:12;12439:31;:::i;:::-;12433:3;12422:15;;12415:56;12426:5;11151:1350;-1:-1:-1;;;;;11151:1350:156:o;12506:296::-;12689:6;12678:9;12671:25;12732:2;12727;12716:9;12712:18;12705:30;12652:4;12752:44;12792:2;12781:9;12777:18;12769:6;12752:44;:::i;13113:127::-;13174:10;13169:3;13165:20;13162:1;13155:31;13205:4;13202:1;13195:15;13229:4;13226:1;13219:15;13245:128;13312:9;;;13333:11;;;13330:37;;;13347:18;;:::i;13378:168::-;13451:9;;;13482;;13499:15;;;13493:22;;13479:37;13469:71;;13520:18;;:::i;13551:127::-;13612:10;13607:3;13603:20;13600:1;13593:31;13643:4;13640:1;13633:15;13667:4;13664:1;13657:15;13876:125;13941:9;;;13962:10;;;13959:36;;;13975:18;;:::i;16675:933::-;16948:3;16986:6;16980:13;17002:66;17061:6;17056:3;17049:4;17041:6;17037:17;17002:66;:::i;:::-;17155:3;17133:16;;;-1:-1:-1;;;;;;17129:43:156;17090:16;;;17115:58;;;17198:13;;17220:78;17198:13;17285:1;17274:13;;17267:4;17255:17;;17220:78;:::i;:::-;17362:13;;17317:20;;;17384:75;17362:13;17446:1;17438:10;;17431:4;17419:17;;17384:75;:::i;:::-;17549:3;17527:16;;;;-1:-1:-1;;;;;;17523:51:156;17519:1;17478:17;;;;17511:10;;;17504:71;;;;-1:-1:-1;;17599:2:156;17591:11;;16675:933;-1:-1:-1;;;;16675:933:156:o;17613:172::-;17680:10;17710;;;17722;;;17706:27;;17745:11;;;17742:37;;;17759:18;;:::i;17790:249::-;17861:10;17903;;;17915;;;17899:27;17946:20;;;;17861:10;17985:24;;;17975:58;;18013:18;;:::i;:::-;17975:58;;17790:249;;;;:::o;19293:1136::-;19713:5;19708:3;19704:15;19695:6;19690:3;19686:16;19682:38;19677:3;19670:51;19652:3;19749:10;19744:3;19740:20;19811:2;19802:6;19797:3;19793:16;19789:25;19785:1;19780:3;19776:11;19769:46;19844:6;19840:1;19835:3;19831:11;19824:27;19903:2;19894:6;19889:3;19885:16;19881:25;19876:2;19871:3;19867:12;19860:47;;19936:6;19930:13;19952:75;20020:6;20015:2;20010:3;20006:12;19999:4;19991:6;19987:17;19952:75;:::i;:::-;20087:13;;20046:16;;;;20109:76;20087:13;20171:2;20163:11;;20156:4;20144:17;;20109:76;:::i;:::-;20276:3;20254:16;;;-1:-1:-1;;;;;;20250:51:156;20245:2;20204:17;;;;20237:11;;;20230:72;20311:38;20345:2;20337:11;;20329:6;15014:3;14993:15;-1:-1:-1;;;;;;14989:42:156;14977:55;;14924:114;20311:38;20358;20392:2;20388;20384:11;20376:6;15014:3;14993:15;-1:-1:-1;;;;;;14989:42:156;14977:55;;14924:114;20358:38;20420:2;20412:11;;19293:1136;-1:-1:-1;;;;;;;;;;;19293:1136:156:o;20434:428::-;20591:3;20629:6;20623:13;20645:66;20704:6;20699:3;20692:4;20684:6;20680:17;20645:66;:::i;:::-;20780:2;20776:15;;;;-1:-1:-1;;20772:53:156;20733:16;;;;20758:68;;;20853:2;20842:14;;20434:428;-1:-1:-1;;20434:428:156:o;20867:519::-;21048:3;21086:6;21080:13;21102:66;21161:6;21156:3;21149:4;21141:6;21137:17;21102:66;:::i;:::-;-1:-1:-1;;;;;;21229:3:156;21272:16;;;21268:25;;21190:16;;;;21254:40;;;21329:16;;;;21325:25;21321:1;21310:13;;21303:48;21378:1;21367:13;;;-1:-1:-1;;20867:519:156:o;21391:423::-;21546:3;21584:6;21578:13;21600:66;21659:6;21654:3;21647:4;21639:6;21635:17;21600:66;:::i;:::-;21753:3;21731:16;;;;-1:-1:-1;;;;;;21727:51:156;21688:16;;;;21713:66;;;21806:1;21795:13;;21391:423;-1:-1:-1;;21391:423:156:o;21819:287::-;21948:3;21986:6;21980:13;22002:66;22061:6;22056:3;22049:4;22041:6;22037:17;22002:66;:::i;:::-;22084:16;;;;;21819:287;-1:-1:-1;;21819:287:156:o;22111:184::-;22181:6;22234:2;22222:9;22213:7;22209:23;22205:32;22202:52;;;22250:1;22247;22240:12;22202:52;-1:-1:-1;22273:16:156;;22111:184;-1:-1:-1;22111:184:156:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "packConversionData(ConversionData)": "87418b8e",
    "packL1ValidatorRegistrationMessage(bytes32,bool)": "a699c135",
    "packL1ValidatorWeightMessage(bytes32,uint64,uint64)": "854a893f",
    "packRegisterL1ValidatorMessage(ValidatorMessages.ValidationPeriod)": "eb97ce51",
    "packSubnetToL1ConversionMessage(bytes32)": "7f7c427a",
    "packValidationUptimeMessage(bytes32,uint64)": "e1d68f30",
    "unpackL1ValidatorRegistrationMessage(bytes)": "021de88f",
    "unpackL1ValidatorWeightMessage(bytes)": "50782b0f",
    "unpackRegisterL1ValidatorMessage(bytes)": "9b835465",
    "unpackSubnetToL1ConversionMessage(bytes)": "4d847884",
    "unpackValidationUptimeMessage(bytes)": "088c2463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidBLSPublicKey\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"name\":\"InvalidCodecID\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"actual\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"expected\",\"type\":\"uint32\"}],\"name\":\"InvalidMessageLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMessageType\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"subnetID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"validatorManagerBlockchainID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"validatorManagerAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"nodeID\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"blsPublicKey\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"weight\",\"type\":\"uint64\"}],\"internalType\":\"struct InitialValidator[]\",\"name\":\"initialValidators\",\"type\":\"tuple[]\"}],\"internalType\":\"struct ConversionData\",\"name\":\"conversionData\",\"type\":\"tuple\"}],\"name\":\"packConversionData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"validationID\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"name\":\"packL1ValidatorRegistrationMessage\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"validationID\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"weight\",\"type\":\"uint64\"}],\"name\":\"packL1ValidatorWeightMessage\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"subnetID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"nodeID\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"blsPublicKey\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"registrationExpiry\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"threshold\",\"type\":\"uint32\"},{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"internalType\":\"struct PChainOwner\",\"name\":\"remainingBalanceOwner\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"threshold\",\"type\":\"uint32\"},{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"internalType\":\"struct PChainOwner\",\"name\":\"disableOwner\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"weight\",\"type\":\"uint64\"}],\"internalType\":\"struct ValidatorMessages.ValidationPeriod\",\"name\":\"validationPeriod\",\"type\":\"tuple\"}],\"name\":\"packRegisterL1ValidatorMessage\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"conversionID\",\"type\":\"bytes32\"}],\"name\":\"packSubnetToL1ConversionMessage\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"validationID\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"uptime\",\"type\":\"uint64\"}],\"name\":\"packValidationUptimeMessage\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"input\",\"type\":\"bytes\"}],\"name\":\"unpackL1ValidatorRegistrationMessage\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"input\",\"type\":\"bytes\"}],\"name\":\"unpackL1ValidatorWeightMessage\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"input\",\"type\":\"bytes\"}],\"name\":\"unpackRegisterL1ValidatorMessage\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"subnetID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"nodeID\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"blsPublicKey\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"registrationExpiry\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"threshold\",\"type\":\"uint32\"},{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"internalType\":\"struct PChainOwner\",\"name\":\"remainingBalanceOwner\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"threshold\",\"type\":\"uint32\"},{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"internalType\":\"struct PChainOwner\",\"name\":\"disableOwner\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"weight\",\"type\":\"uint64\"}],\"internalType\":\"struct ValidatorMessages.ValidationPeriod\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"input\",\"type\":\"bytes\"}],\"name\":\"unpackSubnetToL1ConversionMessage\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"input\",\"type\":\"bytes\"}],\"name\":\"unpackValidationUptimeMessage\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Packing utilities for the ICM message types used by the Validator Manager contracts, as specified in ACP-77: https://github.com/avalanche-foundation/ACPs/tree/main/ACPs/77-reinventing-subnets\",\"kind\":\"dev\",\"methods\":{\"packConversionData(ConversionData)\":{\"details\":\"Input validation is skipped, since the returned value is intended to be compared directly with an authenticated ICM message.\",\"params\":{\"conversionData\":\"The struct representing data to pack into the message.\"},\"returns\":{\"_0\":\"The packed message.\"}},\"packL1ValidatorRegistrationMessage(bytes32,bool)\":{\"params\":{\"valid\":\"true if the validation period was registered, false if it was not and never will be.\",\"validationID\":\"The ID of the validation period.\"},\"returns\":{\"_0\":\"The packed message.\"}},\"packL1ValidatorWeightMessage(bytes32,uint64,uint64)\":{\"params\":{\"nonce\":\"The nonce of the validation ID.\",\"validationID\":\"The ID of the validation period.\",\"weight\":\"The new weight of the validator.\"},\"returns\":{\"_0\":\"The packed message.\"}},\"packRegisterL1ValidatorMessage(ValidatorMessages.ValidationPeriod)\":{\"params\":{\"validationPeriod\":\"The information to pack into the message.\"},\"returns\":{\"_0\":\"The validationID and the packed message.\"}},\"packSubnetToL1ConversionMessage(bytes32)\":{\"params\":{\"conversionID\":\"The subnet conversion ID to pack into the message.\"},\"returns\":{\"_0\":\"The packed message.\"}},\"packValidationUptimeMessage(bytes32,uint64)\":{\"params\":{\"uptime\":\"The uptime of the validator.\",\"validationID\":\"The ID of the validation period.\"},\"returns\":{\"_0\":\"The packed message.\"}},\"unpackL1ValidatorRegistrationMessage(bytes)\":{\"params\":{\"input\":\"The byte array to unpack.\"},\"returns\":{\"_0\":\"The validationID and whether the validation period was registered or is not a validator and never will be a validator due to the expiry time passing.\"}},\"unpackL1ValidatorWeightMessage(bytes)\":{\"params\":{\"input\":\"The byte array to unpack.\"},\"returns\":{\"_0\":\"The validationID, nonce, and weight.\"}},\"unpackRegisterL1ValidatorMessage(bytes)\":{\"params\":{\"input\":\"The byte array to unpack.\"},\"returns\":{\"_0\":\"The unpacked ValidationPeriod.\"}},\"unpackSubnetToL1ConversionMessage(bytes)\":{\"params\":{\"input\":\"The byte array to unpack.\"},\"returns\":{\"_0\":\"The unpacked conversionID.\"}},\"unpackValidationUptimeMessage(bytes)\":{\"params\":{\"input\":\"The byte array to unpack.\"},\"returns\":{\"_0\":\"The validationID and uptime.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"packConversionData(ConversionData)\":{\"notice\":\"Packs ConversionData into a byte array. This byte array is the SHA256 pre-image of the conversionID hash The message format specification is: ConversionData: +----------------+-----------------+--------------------------------------------------------+ |       codecID  :          uint16 |                                                2 bytes | +----------------+-----------------+--------------------------------------------------------+ |       subnetID :        [32]byte |                                               32 bytes | +----------------+-----------------+--------------------------------------------------------+ | managerChainID :        [32]byte |                                               32 bytes | +----------------+-----------------+--------------------------------------------------------+ | managerAddress :          []byte |                          4 + len(managerAddress) bytes | +----------------+-----------------+--------------------------------------------------------+ |     validators : []ValidatorData |                        4 + sum(validatorLengths) bytes | +----------------+-----------------+--------------------------------------------------------+                                    | 74 + len(managerAddress) + len(validatorLengths) bytes |                                    +--------------------------------------------------------+ ValidatorData: +--------------+----------+------------------------+ |       nodeID :   []byte |  4 + len(nodeID) bytes | +--------------+----------+------------------------+ | blsPublicKey : [48]byte |               48 bytes | +--------------+----------+------------------------+ |       weight :   uint64 |                8 bytes | +--------------+----------+------------------------+                           | 60 + len(nodeID) bytes |                           +------------------------+\"},\"packL1ValidatorRegistrationMessage(bytes32,bool)\":{\"notice\":\"Packs a L1ValidatorRegistrationMessage into a byte array. The message format specification is: +--------------+----------+----------+ |      codecID :   uint16 |  2 bytes | +--------------+----------+----------+ |       typeID :   uint32 |  4 bytes | +--------------+----------+----------+ | validationID : [32]byte | 32 bytes | +--------------+----------+----------+ |        valid :     bool |  1 byte  | +--------------+----------+----------+                           | 39 bytes |                           +----------+\"},\"packL1ValidatorWeightMessage(bytes32,uint64,uint64)\":{\"notice\":\"Packs a L1ValidatorWeightMessage message into a byte array. The message format specification is: +--------------+----------+----------+ |      codecID :   uint16 |  2 bytes | +--------------+----------+----------+ |       typeID :   uint32 |  4 bytes | +--------------+----------+----------+ | validationID : [32]byte | 32 bytes | +--------------+----------+----------+ |        nonce :   uint64 |  8 bytes | +--------------+----------+----------+ |       weight :   uint64 |  8 bytes | +--------------+----------+----------+                           | 54 bytes |                           +----------+\"},\"packRegisterL1ValidatorMessage(ValidatorMessages.ValidationPeriod)\":{\"notice\":\"Packs a RegisterL1ValidatorMessage message into a byte array. The message format specification is: RegisterL1ValidatorMessage: +-----------------------+-------------+--------------------------------------------------------------------+ |               codecID :      uint16 |                                                            2 bytes | +-----------------------+-------------+--------------------------------------------------------------------+ |                typeID :      uint32 |                                                            4 bytes | +-----------------------+-------------+-------------------------------------------------------------------+ |              subnetID :    [32]byte |                                                           32 bytes | +-----------------------+-------------+--------------------------------------------------------------------+ |                nodeID :      []byte |                                              4 + len(nodeID) bytes | +-----------------------+-------------+--------------------------------------------------------------------+ |          blsPublicKey :    [48]byte |                                                           48 bytes | +-----------------------+-------------+--------------------------------------------------------------------+ |                expiry :      uint64 |                                                            8 bytes | +-----------------------+-------------+--------------------------------------------------------------------+ | remainingBalanceOwner : PChainOwner |                                      8 + len(addresses) * 20 bytes | +-----------------------+-------------+--------------------------------------------------------------------+ |          disableOwner : PChainOwner |                                      8 + len(addresses) * 20 bytes | +-----------------------+-------------+--------------------------------------------------------------------+ |                weight :      uint64 |                                                            8 bytes | +-----------------------+-------------+--------------------------------------------------------------------+                                       | 122 + len(nodeID) + (len(addresses1) + len(addresses2)) * 20 bytes |                                       +--------------------------------------------------------------------+ PChainOwner: +-----------+------------+-------------------------------+ | threshold :     uint32 |                       4 bytes | +-----------+------------+-------------------------------+ | addresses : [][20]byte | 4 + len(addresses) * 20 bytes | +-----------+------------+-------------------------------+                          | 8 + len(addresses) * 20 bytes |                          +-------------------------------+\"},\"packSubnetToL1ConversionMessage(bytes32)\":{\"notice\":\"Packs a SubnetToL1ConversionMessage message into a byte array. The message format specification is: +--------------------+----------+----------+ |            codecID :   uint16 |  2 bytes | +--------------------+----------+----------+ |             typeID :   uint32 |  4 bytes | +--------------------+----------+----------+ |       conversionID : [32]byte | 32 bytes | +--------------------+----------+----------+                                 | 38 bytes |                                 +----------+\"},\"packValidationUptimeMessage(bytes32,uint64)\":{\"notice\":\"Packs a ValidationUptimeMessage into a byte array. The message format specification is: +--------------+----------+----------+ |      codecID :   uint16 |  2 bytes | +--------------+----------+----------+ |       typeID :   uint32 |  4 bytes | +--------------+----------+----------+ | validationID : [32]byte | 32 bytes | +--------------+----------+----------+ |       uptime :   uint64 |  8 bytes | +--------------+----------+----------+                           | 46 bytes |                           +----------+\"},\"unpackL1ValidatorRegistrationMessage(bytes)\":{\"notice\":\"Unpacks a byte array as a L1ValidatorRegistrationMessage message. The message format specification is the same as the one used in above for packing.\"},\"unpackL1ValidatorWeightMessage(bytes)\":{\"notice\":\"Unpacks a byte array as an L1ValidatorWeightMessage. The message format specification is the same as the one used in above for packing.\"},\"unpackRegisterL1ValidatorMessage(bytes)\":{\"notice\":\"Unpacks a byte array as a RegisterL1ValidatorMessage message. The message format specification is the same as the one used in above for packing.\"},\"unpackSubnetToL1ConversionMessage(bytes)\":{\"notice\":\"Unpacks a byte array as a SubnetToL1ConversionMessage message. The message format specification is the same as the one used in above for packing.\"},\"unpackValidationUptimeMessage(bytes)\":{\"notice\":\"Unpacks a byte array as a ValidationUptimeMessage. The message format specification is the same as the one used in above for packing.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/validator-manager/ValidatorMessages.sol\":\"ValidatorMessages\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@avalabs/subnet-evm-contracts@1.2.0/=lib/subnet-evm/contracts/\",\":@forge-std/=lib/forge-std/src/\",\":@mocks/=contracts/mocks/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts-upgradeable@5.0.2/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/contracts@5.0.2/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/\",\":@teleporter/=contracts/teleporter/\",\":@utilities/=contracts/utilities/\",\":ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/\",\":subnet-evm/=lib/subnet-evm/\"]},\"sources\":{\"contracts/validator-manager/ValidatorMessages.sol\":{\"keccak256\":\"0x5453db56bdeab5e9a35c4e38f40a1e6e4398f8f38f1793034f52d950557c2a06\",\"license\":\"Ecosystem\",\"urls\":[\"bzz-raw://345204e7cca2a2629406d918bb18b73d8d26d238988f7be885bbdbc701c098ee\",\"dweb:/ipfs/QmPvhBbQQzwMYpdZm79Tm7sm7AM7Gpv96tocd9wfshtmr4\"]},\"contracts/validator-manager/interfaces/IValidatorManager.sol\":{\"keccak256\":\"0xe65fc4145d85895e7331ceae0417dfe8bcc51a4c9c005a4f3167750b65c39515\",\"license\":\"Ecosystem\",\"urls\":[\"bzz-raw://5d8ab37cf3ca00864099b58cb7526ef1a2a53cdf6130ba7f90620d64797d8984\",\"dweb:/ipfs/QmdnWNPzE2aa3pdH89hQq2yyxQauivGnB4Gzvy5iaSTbLm\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.25+commit.b61c2a91"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidBLSPublicKey"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "id",
              "type": "uint32"
            }
          ],
          "type": "error",
          "name": "InvalidCodecID"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "actual",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "expected",
              "type": "uint32"
            }
          ],
          "type": "error",
          "name": "InvalidMessageLength"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidMessageType"
        },
        {
          "inputs": [
            {
              "internalType": "struct ConversionData",
              "name": "conversionData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "subnetID",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "validatorManagerBlockchainID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "validatorManagerAddress",
                  "type": "address"
                },
                {
                  "internalType": "struct InitialValidator[]",
                  "name": "initialValidators",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes",
                      "name": "nodeID",
                      "type": "bytes"
                    },
                    {
                      "internalType": "bytes",
                      "name": "blsPublicKey",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint64",
                      "name": "weight",
                      "type": "uint64"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "packConversionData",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "validationID",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "valid",
              "type": "bool"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "packL1ValidatorRegistrationMessage",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "validationID",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "nonce",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "weight",
              "type": "uint64"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "packL1ValidatorWeightMessage",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ValidatorMessages.ValidationPeriod",
              "name": "validationPeriod",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "subnetID",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "nodeID",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "blsPublicKey",
                  "type": "bytes"
                },
                {
                  "internalType": "uint64",
                  "name": "registrationExpiry",
                  "type": "uint64"
                },
                {
                  "internalType": "struct PChainOwner",
                  "name": "remainingBalanceOwner",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint32",
                      "name": "threshold",
                      "type": "uint32"
                    },
                    {
                      "internalType": "address[]",
                      "name": "addresses",
                      "type": "address[]"
                    }
                  ]
                },
                {
                  "internalType": "struct PChainOwner",
                  "name": "disableOwner",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint32",
                      "name": "threshold",
                      "type": "uint32"
                    },
                    {
                      "internalType": "address[]",
                      "name": "addresses",
                      "type": "address[]"
                    }
                  ]
                },
                {
                  "internalType": "uint64",
                  "name": "weight",
                  "type": "uint64"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "packRegisterL1ValidatorMessage",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "conversionID",
              "type": "bytes32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "packSubnetToL1ConversionMessage",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "validationID",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "uptime",
              "type": "uint64"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "packValidationUptimeMessage",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "input",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "unpackL1ValidatorRegistrationMessage",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "input",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "unpackL1ValidatorWeightMessage",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "input",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "unpackRegisterL1ValidatorMessage",
          "outputs": [
            {
              "internalType": "struct ValidatorMessages.ValidationPeriod",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "subnetID",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "nodeID",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "blsPublicKey",
                  "type": "bytes"
                },
                {
                  "internalType": "uint64",
                  "name": "registrationExpiry",
                  "type": "uint64"
                },
                {
                  "internalType": "struct PChainOwner",
                  "name": "remainingBalanceOwner",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint32",
                      "name": "threshold",
                      "type": "uint32"
                    },
                    {
                      "internalType": "address[]",
                      "name": "addresses",
                      "type": "address[]"
                    }
                  ]
                },
                {
                  "internalType": "struct PChainOwner",
                  "name": "disableOwner",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint32",
                      "name": "threshold",
                      "type": "uint32"
                    },
                    {
                      "internalType": "address[]",
                      "name": "addresses",
                      "type": "address[]"
                    }
                  ]
                },
                {
                  "internalType": "uint64",
                  "name": "weight",
                  "type": "uint64"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "input",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "unpackSubnetToL1ConversionMessage",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "input",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "unpackValidationUptimeMessage",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "packConversionData(ConversionData)": {
            "details": "Input validation is skipped, since the returned value is intended to be compared directly with an authenticated ICM message.",
            "params": {
              "conversionData": "The struct representing data to pack into the message."
            },
            "returns": {
              "_0": "The packed message."
            }
          },
          "packL1ValidatorRegistrationMessage(bytes32,bool)": {
            "params": {
              "valid": "true if the validation period was registered, false if it was not and never will be.",
              "validationID": "The ID of the validation period."
            },
            "returns": {
              "_0": "The packed message."
            }
          },
          "packL1ValidatorWeightMessage(bytes32,uint64,uint64)": {
            "params": {
              "nonce": "The nonce of the validation ID.",
              "validationID": "The ID of the validation period.",
              "weight": "The new weight of the validator."
            },
            "returns": {
              "_0": "The packed message."
            }
          },
          "packRegisterL1ValidatorMessage(ValidatorMessages.ValidationPeriod)": {
            "params": {
              "validationPeriod": "The information to pack into the message."
            },
            "returns": {
              "_0": "The validationID and the packed message."
            }
          },
          "packSubnetToL1ConversionMessage(bytes32)": {
            "params": {
              "conversionID": "The subnet conversion ID to pack into the message."
            },
            "returns": {
              "_0": "The packed message."
            }
          },
          "packValidationUptimeMessage(bytes32,uint64)": {
            "params": {
              "uptime": "The uptime of the validator.",
              "validationID": "The ID of the validation period."
            },
            "returns": {
              "_0": "The packed message."
            }
          },
          "unpackL1ValidatorRegistrationMessage(bytes)": {
            "params": {
              "input": "The byte array to unpack."
            },
            "returns": {
              "_0": "The validationID and whether the validation period was registered or is not a validator and never will be a validator due to the expiry time passing."
            }
          },
          "unpackL1ValidatorWeightMessage(bytes)": {
            "params": {
              "input": "The byte array to unpack."
            },
            "returns": {
              "_0": "The validationID, nonce, and weight."
            }
          },
          "unpackRegisterL1ValidatorMessage(bytes)": {
            "params": {
              "input": "The byte array to unpack."
            },
            "returns": {
              "_0": "The unpacked ValidationPeriod."
            }
          },
          "unpackSubnetToL1ConversionMessage(bytes)": {
            "params": {
              "input": "The byte array to unpack."
            },
            "returns": {
              "_0": "The unpacked conversionID."
            }
          },
          "unpackValidationUptimeMessage(bytes)": {
            "params": {
              "input": "The byte array to unpack."
            },
            "returns": {
              "_0": "The validationID and uptime."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "packConversionData(ConversionData)": {
            "notice": "Packs ConversionData into a byte array. This byte array is the SHA256 pre-image of the conversionID hash The message format specification is: ConversionData: +----------------+-----------------+--------------------------------------------------------+ |       codecID  :          uint16 |                                                2 bytes | +----------------+-----------------+--------------------------------------------------------+ |       subnetID :        [32]byte |                                               32 bytes | +----------------+-----------------+--------------------------------------------------------+ | managerChainID :        [32]byte |                                               32 bytes | +----------------+-----------------+--------------------------------------------------------+ | managerAddress :          []byte |                          4 + len(managerAddress) bytes | +----------------+-----------------+--------------------------------------------------------+ |     validators : []ValidatorData |                        4 + sum(validatorLengths) bytes | +----------------+-----------------+--------------------------------------------------------+                                    | 74 + len(managerAddress) + len(validatorLengths) bytes |                                    +--------------------------------------------------------+ ValidatorData: +--------------+----------+------------------------+ |       nodeID :   []byte |  4 + len(nodeID) bytes | +--------------+----------+------------------------+ | blsPublicKey : [48]byte |               48 bytes | +--------------+----------+------------------------+ |       weight :   uint64 |                8 bytes | +--------------+----------+------------------------+                           | 60 + len(nodeID) bytes |                           +------------------------+"
          },
          "packL1ValidatorRegistrationMessage(bytes32,bool)": {
            "notice": "Packs a L1ValidatorRegistrationMessage into a byte array. The message format specification is: +--------------+----------+----------+ |      codecID :   uint16 |  2 bytes | +--------------+----------+----------+ |       typeID :   uint32 |  4 bytes | +--------------+----------+----------+ | validationID : [32]byte | 32 bytes | +--------------+----------+----------+ |        valid :     bool |  1 byte  | +--------------+----------+----------+                           | 39 bytes |                           +----------+"
          },
          "packL1ValidatorWeightMessage(bytes32,uint64,uint64)": {
            "notice": "Packs a L1ValidatorWeightMessage message into a byte array. The message format specification is: +--------------+----------+----------+ |      codecID :   uint16 |  2 bytes | +--------------+----------+----------+ |       typeID :   uint32 |  4 bytes | +--------------+----------+----------+ | validationID : [32]byte | 32 bytes | +--------------+----------+----------+ |        nonce :   uint64 |  8 bytes | +--------------+----------+----------+ |       weight :   uint64 |  8 bytes | +--------------+----------+----------+                           | 54 bytes |                           +----------+"
          },
          "packRegisterL1ValidatorMessage(ValidatorMessages.ValidationPeriod)": {
            "notice": "Packs a RegisterL1ValidatorMessage message into a byte array. The message format specification is: RegisterL1ValidatorMessage: +-----------------------+-------------+--------------------------------------------------------------------+ |               codecID :      uint16 |                                                            2 bytes | +-----------------------+-------------+--------------------------------------------------------------------+ |                typeID :      uint32 |                                                            4 bytes | +-----------------------+-------------+-------------------------------------------------------------------+ |              subnetID :    [32]byte |                                                           32 bytes | +-----------------------+-------------+--------------------------------------------------------------------+ |                nodeID :      []byte |                                              4 + len(nodeID) bytes | +-----------------------+-------------+--------------------------------------------------------------------+ |          blsPublicKey :    [48]byte |                                                           48 bytes | +-----------------------+-------------+--------------------------------------------------------------------+ |                expiry :      uint64 |                                                            8 bytes | +-----------------------+-------------+--------------------------------------------------------------------+ | remainingBalanceOwner : PChainOwner |                                      8 + len(addresses) * 20 bytes | +-----------------------+-------------+--------------------------------------------------------------------+ |          disableOwner : PChainOwner |                                      8 + len(addresses) * 20 bytes | +-----------------------+-------------+--------------------------------------------------------------------+ |                weight :      uint64 |                                                            8 bytes | +-----------------------+-------------+--------------------------------------------------------------------+                                       | 122 + len(nodeID) + (len(addresses1) + len(addresses2)) * 20 bytes |                                       +--------------------------------------------------------------------+ PChainOwner: +-----------+------------+-------------------------------+ | threshold :     uint32 |                       4 bytes | +-----------+------------+-------------------------------+ | addresses : [][20]byte | 4 + len(addresses) * 20 bytes | +-----------+------------+-------------------------------+                          | 8 + len(addresses) * 20 bytes |                          +-------------------------------+"
          },
          "packSubnetToL1ConversionMessage(bytes32)": {
            "notice": "Packs a SubnetToL1ConversionMessage message into a byte array. The message format specification is: +--------------------+----------+----------+ |            codecID :   uint16 |  2 bytes | +--------------------+----------+----------+ |             typeID :   uint32 |  4 bytes | +--------------------+----------+----------+ |       conversionID : [32]byte | 32 bytes | +--------------------+----------+----------+                                 | 38 bytes |                                 +----------+"
          },
          "packValidationUptimeMessage(bytes32,uint64)": {
            "notice": "Packs a ValidationUptimeMessage into a byte array. The message format specification is: +--------------+----------+----------+ |      codecID :   uint16 |  2 bytes | +--------------+----------+----------+ |       typeID :   uint32 |  4 bytes | +--------------+----------+----------+ | validationID : [32]byte | 32 bytes | +--------------+----------+----------+ |       uptime :   uint64 |  8 bytes | +--------------+----------+----------+                           | 46 bytes |                           +----------+"
          },
          "unpackL1ValidatorRegistrationMessage(bytes)": {
            "notice": "Unpacks a byte array as a L1ValidatorRegistrationMessage message. The message format specification is the same as the one used in above for packing."
          },
          "unpackL1ValidatorWeightMessage(bytes)": {
            "notice": "Unpacks a byte array as an L1ValidatorWeightMessage. The message format specification is the same as the one used in above for packing."
          },
          "unpackRegisterL1ValidatorMessage(bytes)": {
            "notice": "Unpacks a byte array as a RegisterL1ValidatorMessage message. The message format specification is the same as the one used in above for packing."
          },
          "unpackSubnetToL1ConversionMessage(bytes)": {
            "notice": "Unpacks a byte array as a SubnetToL1ConversionMessage message. The message format specification is the same as the one used in above for packing."
          },
          "unpackValidationUptimeMessage(bytes)": {
            "notice": "Unpacks a byte array as a ValidationUptimeMessage. The message format specification is the same as the one used in above for packing."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@avalabs/subnet-evm-contracts@1.2.0/=lib/subnet-evm/contracts/",
        "@forge-std/=lib/forge-std/src/",
        "@mocks/=contracts/mocks/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts-upgradeable@5.0.2/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/",
        "@openzeppelin/contracts@5.0.2/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/",
        "@teleporter/=contracts/teleporter/",
        "@utilities/=contracts/utilities/",
        "ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/",
        "subnet-evm/=lib/subnet-evm/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/validator-manager/ValidatorMessages.sol": "ValidatorMessages"
      },
      "evmVersion": "shanghai",
      "libraries": {}
    },
    "sources": {
      "contracts/validator-manager/ValidatorMessages.sol": {
        "keccak256": "0x5453db56bdeab5e9a35c4e38f40a1e6e4398f8f38f1793034f52d950557c2a06",
        "urls": [
          "bzz-raw://345204e7cca2a2629406d918bb18b73d8d26d238988f7be885bbdbc701c098ee",
          "dweb:/ipfs/QmPvhBbQQzwMYpdZm79Tm7sm7AM7Gpv96tocd9wfshtmr4"
        ],
        "license": "Ecosystem"
      },
      "contracts/validator-manager/interfaces/IValidatorManager.sol": {
        "keccak256": "0xe65fc4145d85895e7331ceae0417dfe8bcc51a4c9c005a4f3167750b65c39515",
        "urls": [
          "bzz-raw://5d8ab37cf3ca00864099b58cb7526ef1a2a53cdf6130ba7f90620d64797d8984",
          "dweb:/ipfs/QmdnWNPzE2aa3pdH89hQq2yyxQauivGnB4Gzvy5iaSTbLm"
        ],
        "license": "Ecosystem"
      }
    },
    "version": 1
  },
  "id": 97
}
