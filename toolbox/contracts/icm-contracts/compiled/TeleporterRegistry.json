{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "initialEntries",
          "type": "tuple[]",
          "internalType": "struct ProtocolRegistryEntry[]",
          "components": [
            {
              "name": "version",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "protocolAddress",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "MAX_VERSION_INCREMENT",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "VALIDATORS_SOURCE_ADDRESS",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "WARP_MESSENGER",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IWarpMessenger"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "addProtocolVersion",
      "inputs": [
        {
          "name": "messageIndex",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "blockchainID",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAddressFromVersion",
      "inputs": [
        {
          "name": "version",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getLatestTeleporter",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract ITeleporterMessenger"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getTeleporterFromVersion",
      "inputs": [
        {
          "name": "version",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract ITeleporterMessenger"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getVersionFromAddress",
      "inputs": [
        {
          "name": "protocolAddress",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "latestVersion",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "AddProtocolVersion",
      "inputs": [
        {
          "name": "version",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "protocolAddress",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "LatestVersionUpdated",
      "inputs": [
        {
          "name": "oldVersion",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "newVersion",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "783:7904:46:-:0;;;2641:272;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1322:42;-1:-1:-1;;;;;2725:30:46;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2710:47;;2785:21;;2768:14;2816:91;2836:6;2832:1;:10;2816:91;;;2863:33;2878:14;2893:1;2878:17;;;;;;;;:::i;:::-;;;;;;;2863:14;;;:33;;:::i;:::-;2844:3;;2816:91;;;;2700:213;2641:272;783:7904;;7305:1380;7391:13;;;:18;7383:63;;;;-1:-1:-1;;;7383:63:46;;2499:2:154;7383:63:46;;;2481:21:154;;;2518:18;;;2511:30;2577:34;2557:18;;;2550:62;2629:18;;7383:63:46;;;;;;;;;7565:13;;7591:1;7547:32;;;:17;:32;;;;;;-1:-1:-1;;;;;7547:32:46;:46;7526:135;;;;-1:-1:-1;;;7526:135:46;;2860:2:154;7526:135:46;;;2842:21:154;2899:2;2879:18;;;2872:30;2938:34;2918:18;;;2911:62;-1:-1:-1;;;2989:18:154;;;2982:40;3039:19;;7526:135:46;2658:406:154;7526:135:46;7679:21;;;;-1:-1:-1;;;;;7679:35:46;7671:89;;;;-1:-1:-1;;;7671:89:46;;3271:2:154;7671:89:46;;;3253:21:154;3310:2;3290:18;;;3283:30;3349:34;3329:18;;;3322:62;-1:-1:-1;;;3400:18:154;;;3393:39;3449:19;;7671:89:46;3069:405:154;7671:89:46;7771:22;7796:13;7857:38;1660:3;7796:13;7857:38;:::i;:::-;7840:13;;:55;;7819:148;;;;-1:-1:-1;;;7819:148:46;;3908:2:154;7819:148:46;;;3890:21:154;3947:2;3927:18;;;3920:30;3986:34;3966:18;;;3959:62;-1:-1:-1;;;4037:18:154;;;4030:44;4091:19;;7819:148:46;3706:410:154;7819:148:46;8013:21;;;;;;7996:13;;7978:32;;;;:17;:32;;;;;;:56;;-1:-1:-1;;;;;;7978:56:46;-1:-1:-1;;;;;7978:56:46;;;;;;8244:21;;8226:40;;;;;:17;:40;;;;;;8210:13;;:56;8206:143;;;8325:13;;8300:21;;;;;-1:-1:-1;;;;;8282:40:46;8325:13;8282:40;;;:17;:40;;;;;;:56;8206:143;8397:21;;;;8382:13;;8363:56;;-1:-1:-1;;;;;8363:56:46;;;;;;8382:13;;8363:56;8523:13;;:30;-1:-1:-1;8519:160:46;;;8585:13;;;8569:29;;;8617:51;;8638:14;;8617:51;;;8519:160;7373:1312;7305:1380;:::o;14:127:154:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:256;217:4;211:11;;;249:17;;-1:-1:-1;;;;;281:34:154;;317:22;;;278:62;275:88;;;343:18;;:::i;:::-;379:4;372:24;146:256;:::o;407:275::-;478:2;472:9;543:2;524:13;;-1:-1:-1;;520:27:154;508:40;;-1:-1:-1;;;;;563:34:154;;599:22;;;560:62;557:88;;;625:18;;:::i;:::-;661:2;654:22;407:275;;-1:-1:-1;407:275:154:o;687:1284::-;822:6;853:2;896;884:9;875:7;871:23;867:32;864:52;;;912:1;909;902:12;864:52;939:16;;-1:-1:-1;;;;;1004:14:154;;;1001:34;;;1031:1;1028;1021:12;1001:34;1069:6;1058:9;1054:22;1044:32;;1114:7;1107:4;1103:2;1099:13;1095:27;1085:55;;1136:1;1133;1126:12;1085:55;1165:2;1159:9;1187:2;1183;1180:10;1177:36;;;1193:18;;:::i;:::-;1233:36;1265:2;1260;1257:1;1253:10;1249:19;1233:36;:::i;:::-;1303:15;;;1334:12;;;;-1:-1:-1;1385:1:154;1381:10;;;;1373:19;;1369:28;;;1409:19;;;1406:39;;;1441:1;1438;1431:12;1406:39;1465:11;;;;1485:456;1501:6;1496:3;1493:15;1485:456;;;1583:4;1577:3;1568:7;1564:17;1560:28;1557:48;;;1601:1;1598;1591:12;1557:48;1631:21;;:::i;:::-;1679:10;;1665:25;;1724:12;;;1718:19;-1:-1:-1;;;;;1772:33:154;;1760:46;;1750:74;;1820:1;1817;1810:12;1750:74;1844:14;;;1837:31;1881:18;;1527:4;1518:14;;;;;1919:12;;;;1485:456;;;1960:5;687:1284;-1:-1:-1;;;;;;;687:1284:154:o;1976:184::-;2046:6;2099:2;2087:9;2078:7;2074:23;2070:32;2067:52;;;2115:1;2112;2105:12;2067:52;-1:-1:-1;2138:16:154;;1976:184;-1:-1:-1;1976:184:154:o;2165:127::-;2226:10;2221:3;2217:20;2214:1;2207:31;2257:4;2254:1;2247:15;2281:4;2278:1;2271:15;3479:222;3544:9;;;3565:10;;;3562:133;;;3617:10;3612:3;3608:20;3605:1;3598:31;3652:4;3649:1;3642:15;3680:4;3677:1;3670:15;3562:133;3479:222;;;;:::o;3706:410::-;783:7904:46;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561000f575f80fd5b506004361061009b575f3560e01c8063ac473ac311610063578063ac473ac31461011f578063b771b3bc14610128578063c07f47d414610136578063d127dc9b1461013e578063d820e64f14610165575f80fd5b80630731775d1461009f578063215abce9146100c357806341f34ed9146100d657806346f9ef49146100eb5780634c1f08ce146100fe575b5f80fd5b6100a65f81565b6040516001600160a01b0390911681526020015b60405180910390f35b6100a66100d13660046107aa565b61016d565b6100e96100e43660046107c1565b61017d565b005b6100a66100f93660046107aa565b6103ec565b61011161010c366004610802565b6104ae565b6040519081526020016100ba565b6101116101f481565b6100a66005600160991b0181565b6101115f5481565b6101117f000000000000000000000000000000000000000000000000000000000000000081565b6100a6610554565b5f610177826103ec565b92915050565b6040516306f8253560e41b815263ffffffff821660048201525f9081906005600160991b0190636f825350906024015f60405180830381865afa1580156101c6573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526101ed919081019061089f565b91509150806102545760405162461bcd60e51b815260206004820152602860248201527f54656c65706f7274657252656769737472793a20696e76616c69642077617270604482015267206d65737361676560c01b60648201526084015b60405180910390fd5b81517f0000000000000000000000000000000000000000000000000000000000000000146102d85760405162461bcd60e51b815260206004820152602b60248201527f54656c65706f7274657252656769737472793a20696e76616c696420736f757260448201526a18d94818da185a5b88125160aa1b606482015260840161024b565b60208201516001600160a01b03161561034d5760405162461bcd60e51b815260206004820152603160248201527f54656c65706f7274657252656769737472793a20696e76616c6964206f726967604482015270696e2073656e646572206164647265737360781b606482015260840161024b565b5f808360400151806020019051810190610367919061099e565b90925090506001600160a01b03811630146103dc5760405162461bcd60e51b815260206004820152602f60248201527f54656c65706f7274657252656769737472793a20696e76616c6964206465737460448201526e696e6174696f6e206164647265737360881b606482015260840161024b565b6103e582610564565b5050505050565b5f815f0361043c5760405162461bcd60e51b815260206004820181905260248201527f54656c65706f7274657252656769737472793a207a65726f2076657273696f6e604482015260640161024b565b5f828152600160205260409020546001600160a01b0316806101775760405162461bcd60e51b815260206004820152602560248201527f54656c65706f7274657252656769737472793a2076657273696f6e206e6f7420604482015264199bdd5b9960da1b606482015260840161024b565b5f6001600160a01b0382166104d55760405162461bcd60e51b815260040161024b90610a17565b6001600160a01b0382165f90815260026020526040812054908190036101775760405162461bcd60e51b815260206004820152602e60248201527f54656c65706f7274657252656769737472793a2070726f746f636f6c2061646460448201526d1c995cdcc81b9bdd08199bdd5b9960921b606482015260840161024b565b5f61055f5f546103ec565b905090565b80515f036105b45760405162461bcd60e51b815260206004820181905260248201527f54656c65706f7274657252656769737472793a207a65726f2076657273696f6e604482015260640161024b565b80515f908152600160205260409020546001600160a01b03161561062d5760405162461bcd60e51b815260206004820152602a60248201527f54656c65706f7274657252656769737472793a2076657273696f6e20616c72656044820152696164792065786973747360b01b606482015260840161024b565b60208101516001600160a01b03166106575760405162461bcd60e51b815260040161024b90610a17565b5f546106656101f482610a60565b825111156106cc5760405162461bcd60e51b815260206004820152602e60248201527f54656c65706f7274657252656769737472793a2076657273696f6e20696e637260448201526d0cadacadce840e8dede40d0d2ced60931b606482015260840161024b565b6020828101805184515f90815260018452604080822080546001600160a01b0319166001600160a01b03948516179055925190911681526002909252902054825111156107335781516020808401516001600160a01b03165f908152600290915260409020555b602082015182516040516001600160a01b03909216917fa5eed93d951a9603d5f7c0a57de79a299dd3dbd5e51429be209d8053a42ab43a905f90a381518110156107a65781515f81815560405183917f30623e953733f6474dabdfbef1103ce15ab73cdc77c6dfad0f9874d167e8a9b091a35b5050565b5f602082840312156107ba575f80fd5b5035919050565b5f602082840312156107d1575f80fd5b813563ffffffff811681146107e4575f80fd5b9392505050565b6001600160a01b03811681146107ff575f80fd5b50565b5f60208284031215610812575f80fd5b81356107e4816107eb565b634e487b7160e01b5f52604160045260245ffd5b6040516060810167ffffffffffffffff811182821017156108545761085461081d565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156108835761088361081d565b604052919050565b8051801515811461089a575f80fd5b919050565b5f80604083850312156108b0575f80fd5b825167ffffffffffffffff808211156108c7575f80fd5b90840190606082870312156108da575f80fd5b6108e2610831565b825181526020808401516108f5816107eb565b8282015260408401518381111561090a575f80fd5b80850194505087601f85011261091e575f80fd5b8351838111156109305761093061081d565b610942601f8201601f1916830161085a565b93508084528882828701011115610957575f80fd5b5f5b81811015610974578581018301518582018401528201610959565b505f8282860101525082604083015281955061099181880161088b565b9450505050509250929050565b5f8082840360608112156109b0575f80fd5b60408112156109bd575f80fd5b506040516040810181811067ffffffffffffffff821117156109e1576109e161081d565b6040528351815260208401516109f6816107eb565b60208201526040840151909250610a0c816107eb565b809150509250929050565b60208082526029908201527f54656c65706f7274657252656769737472793a207a65726f2070726f746f636f6040820152686c206164647265737360b81b606082015260800190565b8082018082111561017757634e487b7160e01b5f52601160045260245ffdfea164736f6c6343000819000a",
    "sourceMap": "783:7904:46:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1089:62;;1149:1;1089:62;;;;;-1:-1:-1;;;;;178:32:154;;;160:51;;148:2;133:18;1089:62:46;;;;;;;;5384:200;;;;;;:::i;:::-;;:::i;3859:1102::-;;;;;;:::i;:::-;;:::i;:::-;;5741:335;;;;;;:::i;:::-;;:::i;6259:353::-;;;;;;:::i;:::-;;:::i;:::-;;;1460:25:154;;;1448:2;1433:18;6259:353:46;1314:177:154;1612:51:46;;1660:3;1612:51;;1251:114;;-1:-1:-1;;;;;1251:114:46;;1813:28;;;;;;1463:37;;;;;5044:158;;;:::i;5384:200::-;5482:20;5546:30;5568:7;5546:21;:30::i;:::-;5518:59;5384:200;-1:-1:-1;;5384:200:46:o;3859:1102::-;4100:51;;-1:-1:-1;;;4100:51:46;;2084:10:154;2072:23;;4100:51:46;;;2054:42:154;4044:26:46;;;;-1:-1:-1;;;;;1322:42:46;4100:37;;2027:18:154;;4100:51:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4100:51:46;;;;;;;;;;;;:::i;:::-;4043:108;;;;4169:7;4161:60;;;;-1:-1:-1;;;4161:60:46;;4534:2:154;4161:60:46;;;4516:21:154;4573:2;4553:18;;;4546:30;4612:34;4592:18;;;4585:62;-1:-1:-1;;;4663:18:154;;;4656:38;4711:19;;4161:60:46;;;;;;;;;4252:21;;4277:12;4252:37;4231:115;;;;-1:-1:-1;;;4231:115:46;;4943:2:154;4231:115:46;;;4925:21:154;4982:2;4962:18;;;4955:30;5021:34;5001:18;;;4994:62;-1:-1:-1;;;5072:18:154;;;5065:41;5123:19;;4231:115:46;4741:407:154;4231:115:46;4453:27;;;;-1:-1:-1;;;;;4453:56:46;;4432:152;;;;-1:-1:-1;;;4432:152:46;;5355:2:154;4432:152:46;;;5337:21:154;5394:2;5374:18;;;5367:30;5433:34;5413:18;;;5406:62;-1:-1:-1;;;5484:18:154;;;5477:47;5541:19;;4432:152:46;5153:413:154;4432:152:46;4596:34;4632:26;4685:7;:15;;;4674:61;;;;;;;;;;;;:::i;:::-;4595:140;;-1:-1:-1;4595:140:46;-1:-1:-1;;;;;;4826:35:46;;4856:4;4826:35;4805:117;;;;-1:-1:-1;;;4805:117:46;;6574:2:154;4805:117:46;;;6556:21:154;6613:2;6593:18;;;6586:30;6652:34;6632:18;;;6625:62;-1:-1:-1;;;6703:18:154;;;6696:45;6758:19;;4805:117:46;6372:411:154;4805:117:46;4933:21;4948:5;4933:14;:21::i;:::-;3917:1044;;;;3859:1102;:::o;5741:335::-;5810:7;5837;5848:1;5837:12;5829:57;;;;-1:-1:-1;;;5829:57:46;;6990:2:154;5829:57:46;;;6972:21:154;;;7009:18;;;7002:30;7068:34;7048:18;;;7041:62;7120:18;;5829:57:46;6788:356:154;5829:57:46;5896:23;5922:26;;;:17;:26;;;;;;-1:-1:-1;;;;;5922:26:46;;5958:79;;;;-1:-1:-1;;;5958:79:46;;7351:2:154;5958:79:46;;;7333:21:154;7390:2;7370:18;;;7363:30;7429:34;7409:18;;;7402:62;-1:-1:-1;;;7480:18:154;;;7473:35;7525:19;;5958:79:46;7149:401:154;6259:353:46;6336:7;-1:-1:-1;;;;;6363:29:46;;6355:83;;;;-1:-1:-1;;;6355:83:46;;;;;;;:::i;:::-;-1:-1:-1;;;;;6466:34:46;;6448:15;6466:34;;;:17;:34;;;;;;;6518:12;;;6510:71;;;;-1:-1:-1;;;6510:71:46;;8167:2:154;6510:71:46;;;8149:21:154;8206:2;8186:18;;;8179:30;8245:34;8225:18;;;8218:62;-1:-1:-1;;;8296:18:154;;;8289:44;8350:19;;6510:71:46;7965:410:154;5044:158:46;5098:20;5158:36;5180:13;;5158:21;:36::i;:::-;5130:65;;5044:158;:::o;7305:1380::-;7391:13;;;:18;7383:63;;;;-1:-1:-1;;;7383:63:46;;6990:2:154;7383:63:46;;;6972:21:154;;;7009:18;;;7002:30;7068:34;7048:18;;;7041:62;7120:18;;7383:63:46;6788:356:154;7383:63:46;7565:13;;7591:1;7547:32;;;:17;:32;;;;;;-1:-1:-1;;;;;7547:32:46;:46;7526:135;;;;-1:-1:-1;;;7526:135:46;;8582:2:154;7526:135:46;;;8564:21:154;8621:2;8601:18;;;8594:30;8660:34;8640:18;;;8633:62;-1:-1:-1;;;8711:18:154;;;8704:40;8761:19;;7526:135:46;8380:406:154;7526:135:46;7679:21;;;;-1:-1:-1;;;;;7679:35:46;7671:89;;;;-1:-1:-1;;;7671:89:46;;;;;;;:::i;:::-;7771:22;7796:13;7857:38;1660:3;7796:13;7857:38;:::i;:::-;7840:13;;:55;;7819:148;;;;-1:-1:-1;;;7819:148:46;;9220:2:154;7819:148:46;;;9202:21:154;9259:2;9239:18;;;9232:30;9298:34;9278:18;;;9271:62;-1:-1:-1;;;9349:18:154;;;9342:44;9403:19;;7819:148:46;9018:410:154;7819:148:46;8013:21;;;;;;7996:13;;7978:32;;;;:17;:32;;;;;;:56;;-1:-1:-1;;;;;;7978:56:46;-1:-1:-1;;;;;7978:56:46;;;;;;8244:21;;8226:40;;;;;:17;:40;;;;;;8210:13;;:56;8206:143;;;8325:13;;8300:21;;;;;-1:-1:-1;;;;;8282:40:46;8325:13;8282:40;;;:17;:40;;;;;;:56;8206:143;8397:21;;;;8382:13;;8363:56;;-1:-1:-1;;;;;8363:56:46;;;;;;8382:13;;8363:56;8523:13;;:30;-1:-1:-1;8519:160:46;;;8585:13;;;8569:29;;;8617:51;;8638:14;;8617:51;;;8519:160;7373:1312;7305:1380;:::o;222:180:154:-;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;-1:-1:-1;373:23:154;;222:180;-1:-1:-1;222:180:154:o;645:276::-;703:6;756:2;744:9;735:7;731:23;727:32;724:52;;;772:1;769;762:12;724:52;811:9;798:23;861:10;854:5;850:22;843:5;840:33;830:61;;887:1;884;877:12;830:61;910:5;645:276;-1:-1:-1;;;645:276:154:o;926:131::-;-1:-1:-1;;;;;1001:31:154;;991:42;;981:70;;1047:1;1044;1037:12;981:70;926:131;:::o;1062:247::-;1121:6;1174:2;1162:9;1153:7;1149:23;1145:32;1142:52;;;1190:1;1187;1180:12;1142:52;1229:9;1216:23;1248:31;1273:5;1248:31;:::i;2107:127::-;2168:10;2163:3;2159:20;2156:1;2149:31;2199:4;2196:1;2189:15;2223:4;2220:1;2213:15;2239:253;2311:2;2305:9;2353:4;2341:17;;2388:18;2373:34;;2409:22;;;2370:62;2367:88;;;2435:18;;:::i;:::-;2471:2;2464:22;2239:253;:::o;2497:275::-;2568:2;2562:9;2633:2;2614:13;;-1:-1:-1;;2610:27:154;2598:40;;2668:18;2653:34;;2689:22;;;2650:62;2647:88;;;2715:18;;:::i;:::-;2751:2;2744:22;2497:275;;-1:-1:-1;2497:275:154:o;2777:164::-;2853:13;;2902;;2895:21;2885:32;;2875:60;;2931:1;2928;2921:12;2875:60;2777:164;;;:::o;2946:1381::-;3052:6;3060;3113:2;3101:9;3092:7;3088:23;3084:32;3081:52;;;3129:1;3126;3119:12;3081:52;3162:9;3156:16;3191:18;3232:2;3224:6;3221:14;3218:34;;;3248:1;3245;3238:12;3218:34;3271:22;;;;3327:4;3309:16;;;3305:27;3302:47;;;3345:1;3342;3335:12;3302:47;3371:22;;:::i;:::-;3422:2;3416:9;3409:5;3402:24;3445:2;3485;3481;3477:11;3471:18;3498:33;3523:7;3498:33;:::i;:::-;3547:14;;;3540:31;3610:2;3602:11;;3596:18;3626:16;;;3623:36;;;3655:1;3652;3645:12;3623:36;3686:8;3682:2;3678:17;3668:27;;;3733:7;3726:4;3722:2;3718:13;3714:27;3704:55;;3755:1;3752;3745:12;3704:55;3784:2;3778:9;3806:2;3802;3799:10;3796:36;;;3812:18;;:::i;:::-;3854:53;3897:2;3878:13;;-1:-1:-1;;3874:27:154;3870:36;;3854:53;:::i;:::-;3841:66;;3930:2;3923:5;3916:17;3970:7;3965:2;3960;3956;3952:11;3948:20;3945:33;3942:53;;;3991:1;3988;3981:12;3942:53;4013:1;4023:128;4037:2;4034:1;4031:9;4023:128;;;4124:10;;;4120:19;;4114:26;4094:13;;;4090:22;;4083:58;4048:10;;4023:128;;;4027:3;4192:1;4187:2;4182;4175:5;4171:14;4167:23;4160:34;;4226:5;4221:2;4214:5;4210:14;4203:29;4251:5;4241:15;;4275:46;4317:2;4306:9;4302:18;4275:46;:::i;:::-;4265:56;;;;;;2946:1381;;;;;:::o;5571:796::-;5698:6;5706;5750:9;5741:7;5737:23;5780:2;5776;5772:11;5769:31;;;5796:1;5793;5786:12;5769:31;5820:4;5816:2;5812:13;5809:33;;;5838:1;5835;5828:12;5809:33;;5871:4;5865:11;5915:4;5907:6;5903:17;5986:6;5974:10;5971:22;5950:18;5938:10;5935:34;5932:62;5929:88;;;5997:18;;:::i;:::-;6033:4;6026:24;6074:16;;6059:32;;6134:2;6119:18;;6113:25;6147:31;6113:25;6147:31;:::i;:::-;6206:2;6194:15;;6187:30;6287:4;6272:20;;6266:27;6198:6;;-1:-1:-1;6302:33:154;6266:27;6302:33;:::i;:::-;6354:7;6344:17;;;5571:796;;;;;:::o;7555:405::-;7757:2;7739:21;;;7796:2;7776:18;;;7769:30;7835:34;7830:2;7815:18;;7808:62;-1:-1:-1;;;7901:2:154;7886:18;;7879:39;7950:3;7935:19;;7555:405::o;8791:222::-;8856:9;;;8877:10;;;8874:133;;;8929:10;8924:3;8920:20;8917:1;8910:31;8964:4;8961:1;8954:15;8992:4;8989:1;8982:15",
    "linkReferences": {},
    "immutableReferences": {
      "19797": [
        {
          "start": 323,
          "length": 32
        },
        {
          "start": 600,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "MAX_VERSION_INCREMENT()": "ac473ac3",
    "VALIDATORS_SOURCE_ADDRESS()": "0731775d",
    "WARP_MESSENGER()": "b771b3bc",
    "addProtocolVersion(uint32)": "41f34ed9",
    "blockchainID()": "d127dc9b",
    "getAddressFromVersion(uint256)": "46f9ef49",
    "getLatestTeleporter()": "d820e64f",
    "getTeleporterFromVersion(uint256)": "215abce9",
    "getVersionFromAddress(address)": "4c1f08ce",
    "latestVersion()": "c07f47d4"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"protocolAddress\",\"type\":\"address\"}],\"internalType\":\"struct ProtocolRegistryEntry[]\",\"name\":\"initialEntries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"protocolAddress\",\"type\":\"address\"}],\"name\":\"AddProtocolVersion\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"oldVersion\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newVersion\",\"type\":\"uint256\"}],\"name\":\"LatestVersionUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_VERSION_INCREMENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VALIDATORS_SOURCE_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WARP_MESSENGER\",\"outputs\":[{\"internalType\":\"contract IWarpMessenger\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"messageIndex\",\"type\":\"uint32\"}],\"name\":\"addProtocolVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blockchainID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"}],\"name\":\"getAddressFromVersion\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestTeleporter\",\"outputs\":[{\"internalType\":\"contract ITeleporterMessenger\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"}],\"name\":\"getTeleporterFromVersion\",\"outputs\":[{\"internalType\":\"contract ITeleporterMessenger\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"protocolAddress\",\"type\":\"address\"}],\"name\":\"getVersionFromAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"https://github.com/ava-labs/icm-contracts/blob/main/SECURITY.md\",\"details\":\"TeleporterRegistry contract provides an upgrade mechanism for {ITeleporterMessenger} contracts through Warp off-chain messages\",\"kind\":\"dev\",\"methods\":{\"addProtocolVersion(uint32)\":{\"details\":\"Receives a Warp off-chain message containing a new protocol version and address to be registered, and adds the new values to the respective mappings. If a version is greater than the current latest version, it will be set as the latest version. If a version is less than the current latest version, it is added to the registry, but doesn't change the latest version. Emits a {AddProtocolVersion} event when successful. Emits a {LatestVersionUpdated} event when a new protocol version greater than the current latest version is added. Requirements: - a valid Warp off-chain message must be provided. - source chain ID must be the same as the blockchain ID of the registry. - origin sender address must be the same as the `VALIDATORS_SOURCE_ADDRESS`. - destination address must be the same as the address of this registry.\"},\"constructor\":{\"details\":\"Initializes the contract by setting `blockchainID` and `latestVersion`. Also adds the initial protocol versions to the registry.\"},\"getAddressFromVersion(uint256)\":{\"details\":\"Gets the address of a protocol version. Requirements: - `version` must be a valid registered version.\"},\"getLatestTeleporter()\":{\"details\":\"Gets the latest {ITeleporterMessenger} contract.\"},\"getTeleporterFromVersion(uint256)\":{\"details\":\"Gets the {ITeleporterMessenger} contract of the given `version`. Requirements: - `version` must be a valid registered version.\"},\"getVersionFromAddress(address)\":{\"details\":\"Gets the version of the given `protocolAddress`. Requirements: - `protocolAddress` must be a valid registered protocol address.\"}},\"stateVariables\":{\"VALIDATORS_SOURCE_ADDRESS\":{\"details\":\"The address is not owned by any EOA or smart contract account, so it cannot possibly be the source address of any other Warp message emitted by the VM.\"},\"latestVersion\":{\"details\":\"0 means no protocol version has been added, and isn't a valid version.\"}},\"version\":1},\"userdoc\":{\"events\":{\"AddProtocolVersion(uint256,address)\":{\"notice\":\"Emitted when a new protocol version is added to the registry.\"},\"LatestVersionUpdated(uint256,uint256)\":{\"notice\":\"Emitted when the latest version is updated.\"}},\"kind\":\"user\",\"methods\":{\"MAX_VERSION_INCREMENT()\":{\"notice\":\"The maximum version increment allowed when adding a new protocol version.\"},\"VALIDATORS_SOURCE_ADDRESS()\":{\"notice\":\"Address that the off-chain Warp message sets as the \\\"source\\\" address.\"},\"WARP_MESSENGER()\":{\"notice\":\"Warp precompile used for sending and receiving Warp messages.\"},\"blockchainID()\":{\"notice\":\"The blockchain ID of the chain the contract is deployed on.\"},\"latestVersion()\":{\"notice\":\"The latest protocol version.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/teleporter/registry/TeleporterRegistry.sol\":\"TeleporterRegistry\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@avalabs/subnet-evm-contracts@1.2.0/=lib/subnet-evm/contracts/\",\":@forge-std/=lib/forge-std/src/\",\":@mocks/=contracts/mocks/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts-upgradeable@5.0.2/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/contracts@5.0.2/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/\",\":@teleporter/=contracts/teleporter/\",\":@utilities/=contracts/utilities/\",\":ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/\",\":subnet-evm/=lib/subnet-evm/\"]},\"sources\":{\"contracts/teleporter/ITeleporterMessenger.sol\":{\"keccak256\":\"0x320fa58f06c20a06e853f624c17c0e5d7d4eb10c50b345834c5ffc5cb17418af\",\"license\":\"Ecosystem\",\"urls\":[\"bzz-raw://6605a1192820e777266347a115c37cc4cef8ebb4e108e49901f90b7c693e7786\",\"dweb:/ipfs/QmV3padXtL2KdTTCsAshtPRLT85LHGMnLsmxsdkRDftdYA\"]},\"contracts/teleporter/registry/TeleporterRegistry.sol\":{\"keccak256\":\"0x81ddfaf883bd618270c80dfeac1cc3c0fc6849cd6375dcf4850c995759c9a473\",\"license\":\"Ecosystem\",\"urls\":[\"bzz-raw://d2dbad32afd7265ee24cd3caef7cf24cd31ef99d89ed91a699d4217f0d402c8d\",\"dweb:/ipfs/QmbQzHdQHMCEzn2AYNZ63gFRCsLcNq4DNjU4VPdExEDos2\"]},\"lib/subnet-evm/contracts/contracts/interfaces/IWarpMessenger.sol\":{\"keccak256\":\"0x0539520770a5f2a64df4c019b5611e9a82bd70f4303a1265a28243124043a3f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7319c785d708f6afcd3799e2fc44c29cd72b06100fee3556f9364edc15bec237\",\"dweb:/ipfs/QmaZzV9H6RHAxzoqWVKH6rX47GHGhMMERwwfTx2pjQmpV3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.25+commit.b61c2a91"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct ProtocolRegistryEntry[]",
              "name": "initialEntries",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "version",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "protocolAddress",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "version",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "protocolAddress",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AddProtocolVersion",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldVersion",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newVersion",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "LatestVersionUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_VERSION_INCREMENT",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "VALIDATORS_SOURCE_ADDRESS",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WARP_MESSENGER",
          "outputs": [
            {
              "internalType": "contract IWarpMessenger",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "messageIndex",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addProtocolVersion"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "blockchainID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "version",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAddressFromVersion",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLatestTeleporter",
          "outputs": [
            {
              "internalType": "contract ITeleporterMessenger",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "version",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTeleporterFromVersion",
          "outputs": [
            {
              "internalType": "contract ITeleporterMessenger",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "protocolAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getVersionFromAddress",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "latestVersion",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addProtocolVersion(uint32)": {
            "details": "Receives a Warp off-chain message containing a new protocol version and address to be registered, and adds the new values to the respective mappings. If a version is greater than the current latest version, it will be set as the latest version. If a version is less than the current latest version, it is added to the registry, but doesn't change the latest version. Emits a {AddProtocolVersion} event when successful. Emits a {LatestVersionUpdated} event when a new protocol version greater than the current latest version is added. Requirements: - a valid Warp off-chain message must be provided. - source chain ID must be the same as the blockchain ID of the registry. - origin sender address must be the same as the `VALIDATORS_SOURCE_ADDRESS`. - destination address must be the same as the address of this registry."
          },
          "constructor": {
            "details": "Initializes the contract by setting `blockchainID` and `latestVersion`. Also adds the initial protocol versions to the registry."
          },
          "getAddressFromVersion(uint256)": {
            "details": "Gets the address of a protocol version. Requirements: - `version` must be a valid registered version."
          },
          "getLatestTeleporter()": {
            "details": "Gets the latest {ITeleporterMessenger} contract."
          },
          "getTeleporterFromVersion(uint256)": {
            "details": "Gets the {ITeleporterMessenger} contract of the given `version`. Requirements: - `version` must be a valid registered version."
          },
          "getVersionFromAddress(address)": {
            "details": "Gets the version of the given `protocolAddress`. Requirements: - `protocolAddress` must be a valid registered protocol address."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "MAX_VERSION_INCREMENT()": {
            "notice": "The maximum version increment allowed when adding a new protocol version."
          },
          "VALIDATORS_SOURCE_ADDRESS()": {
            "notice": "Address that the off-chain Warp message sets as the \"source\" address."
          },
          "WARP_MESSENGER()": {
            "notice": "Warp precompile used for sending and receiving Warp messages."
          },
          "blockchainID()": {
            "notice": "The blockchain ID of the chain the contract is deployed on."
          },
          "latestVersion()": {
            "notice": "The latest protocol version."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@avalabs/subnet-evm-contracts@1.2.0/=lib/subnet-evm/contracts/",
        "@forge-std/=lib/forge-std/src/",
        "@mocks/=contracts/mocks/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts-upgradeable@5.0.2/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/",
        "@openzeppelin/contracts@5.0.2/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/",
        "@teleporter/=contracts/teleporter/",
        "@utilities/=contracts/utilities/",
        "ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/",
        "subnet-evm/=lib/subnet-evm/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/teleporter/registry/TeleporterRegistry.sol": "TeleporterRegistry"
      },
      "evmVersion": "shanghai",
      "libraries": {}
    },
    "sources": {
      "contracts/teleporter/ITeleporterMessenger.sol": {
        "keccak256": "0x320fa58f06c20a06e853f624c17c0e5d7d4eb10c50b345834c5ffc5cb17418af",
        "urls": [
          "bzz-raw://6605a1192820e777266347a115c37cc4cef8ebb4e108e49901f90b7c693e7786",
          "dweb:/ipfs/QmV3padXtL2KdTTCsAshtPRLT85LHGMnLsmxsdkRDftdYA"
        ],
        "license": "Ecosystem"
      },
      "contracts/teleporter/registry/TeleporterRegistry.sol": {
        "keccak256": "0x81ddfaf883bd618270c80dfeac1cc3c0fc6849cd6375dcf4850c995759c9a473",
        "urls": [
          "bzz-raw://d2dbad32afd7265ee24cd3caef7cf24cd31ef99d89ed91a699d4217f0d402c8d",
          "dweb:/ipfs/QmbQzHdQHMCEzn2AYNZ63gFRCsLcNq4DNjU4VPdExEDos2"
        ],
        "license": "Ecosystem"
      },
      "lib/subnet-evm/contracts/contracts/interfaces/IWarpMessenger.sol": {
        "keccak256": "0x0539520770a5f2a64df4c019b5611e9a82bd70f4303a1265a28243124043a3f3",
        "urls": [
          "bzz-raw://7319c785d708f6afcd3799e2fc44c29cd72b06100fee3556f9364edc15bec237",
          "dweb:/ipfs/QmaZzV9H6RHAxzoqWVKH6rX47GHGhMMERwwfTx2pjQmpV3"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 46
}
